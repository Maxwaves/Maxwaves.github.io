<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux用户与权限：权限管理</title>
      <link href="/2022/04/24/Linux%E7%94%A8%E6%88%B7%E4%B8%8E%E6%9D%83%E9%99%90%EF%BC%9A%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
      <url>/2022/04/24/Linux%E7%94%A8%E6%88%B7%E4%B8%8E%E6%9D%83%E9%99%90%EF%BC%9A%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux用户与权限：权限管理"><a href="#Linux用户与权限：权限管理" class="headerlink" title="Linux用户与权限：权限管理"></a>Linux用户与权限：权限管理</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Linux是多用户的操作系统，允许多个用户同时在系统上登录和工作。 为了确 保系统和用户的安全采取了如下安全管理方案： </p><ul><li><p>通过UID/GID确定每个用户在登录系统后都做了些什么 </p></li><li><p>通过UID/GID来区别不同用户所建立的文件或目录</p><ul><li>每个文件或目录都属于一个UID和一个GID </li></ul></li><li><p>每个进程都使用一个UID和一个或多个GID来运行</p><ul><li>通常由被运行进程的用户决定 </li></ul></li><li><p><strong>超级用户具有一切权限，无需特殊说明</strong> </p></li><li><p>普通用户只能不受限制的操作主目录及其子目录下的所有文件，对系统 中其他目录/文件的访问受到限制</p></li></ul><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><p>文件所有者：user</p><p>文件所属组 ：group</p><p>其他用户 ：other</p><table><thead><tr><th><strong>权限项</strong></th><th><strong>可读</strong></th><th><strong>可写</strong></th><th><strong>可执行</strong></th><th><strong>可读</strong></th><th><strong>可写</strong></th><th><strong>可执行</strong></th><th><strong>可读</strong></th><th><strong>可写</strong></th><th><strong>可执行</strong></th></tr></thead><tbody><tr><td>字符表示</td><td>r</td><td>w</td><td>x</td><td>r</td><td>w</td><td>x</td><td>r</td><td>w</td><td>x</td></tr><tr><td>数字表示</td><td>4</td><td>2</td><td>1</td><td>4</td><td>2</td><td>1</td><td>4</td><td>2</td><td>1</td></tr><tr><td>权限分配</td><td>user</td><td>user</td><td>user</td><td>group</td><td>group</td><td>group</td><td>other</td><td>other</td><td>other</td></tr></tbody></table><ul><li><p>目录上只有执行权限，表示可以进入或穿越他进入更深层次的子目录</p></li><li><p>目录上只有执行权限，要访问该目录下的有读权限的文件，必须知道文件名才可以访问 </p></li><li><p>目录上只有执行权限，不能列出目录列表也不能删除该目录</p></li><li><p>目录上执行权限和读权限的组合，表示可以进入目录并列出目录列表</p></li><li><p>目录上执行权限和写权限的组合，表示可以在目录中创建、删除和重命名文件</p></li></ul><h3 id="分配三种基本权限"><a href="#分配三种基本权限" class="headerlink" title="分配三种基本权限"></a>分配三种基本权限</h3><ul><li><p>文件和目录的使用者</p><ul><li>属主、同组人、其他人 </li></ul></li><li><p>权限分配</p><ul><li><p>属主的权限：用于限制文件或目录的创建者 </p></li><li><p>属组的权限：用于限制文件或目录所属组的成员</p></li><li><p>其他用户的权限：用于限制既不是属主又不是所属组的能访问该 文件或目录的其他人员</p></li></ul></li><li><p>权限的优先顺序</p><ul><li><p>如果UID匹配，就应用用户属主（user）权限 </p></li><li><p>否则，如果GID匹配，就应用组（group）权限</p></li><li><p>如果都不匹配，就应用其它用户（other）权限</p></li></ul></li></ul><h2 id="权限的管理"><a href="#权限的管理" class="headerlink" title="权限的管理"></a>权限的管理</h2><ul><li><p><strong>chmod</strong>改变文件或目录的权限</p></li><li><p><strong>chown</strong> – 改变文件或目录的属主（所有者）</p></li><li><p><strong>chgrp</strong> – 改变文件或目录所属的组 </p></li><li><p><strong>umask</strong> – 设置文件的缺省生成掩码</p></li><li><p><strong>su</strong>与<strong>sudo</strong> – 切换用户及权限下放</p></li></ul><h3 id="修改文件-目录的权限"><a href="#修改文件-目录的权限" class="headerlink" title="修改文件/目录的权限"></a>修改文件/目录的权限</h3><ul><li><p>更改已有文件或目录的访问权限</p><ul><li>使用chmod命令</li></ul></li><li><p>chmod命令有两种设置方法</p><ul><li><p>文字设定法 </p><ul><li><p>使用字母和操作符表达式来修改或设定文件的访问权限</p></li><li><p>chmod [-R] &lt;文字模式&gt; &lt;文件或目录名&gt; </p></li></ul></li></ul></li><li><p>数值设定法</p><ul><li><p>使用八进制数字来设定文件的访问权限 </p></li><li><p>chmod [-R] &lt;八进制模式&gt; &lt;文件或目录名&gt;</p></li></ul></li></ul><p><strong>-R 选项表示对目录中的所有文件或子目录进行递归操作</strong></p><h4 id="chmod-的文字设定法"><a href="#chmod-的文字设定法" class="headerlink" title="chmod 的文字设定法"></a>chmod 的文字设定法</h4><p>chmod [操作对象] [+|-|=] [访问权限] 文件或目录名</p><table><thead><tr><th>操作对象</th><th>操作方法</th><th>访问权限</th></tr></thead><tbody><tr><td>u   属主（user）</td><td>+  添加某权限</td><td>r 读</td></tr><tr><td>g   同组（group）</td><td>-   删除某权限</td><td>w 写</td></tr><tr><td>o   其他（others）</td><td>=  直接赋予某权限并取消其 他所有权限</td><td>x 执行</td></tr><tr><td>a   所有（all）</td><td>=  直接赋予某权限并取消其 他所有权限</td><td>- 无权限</td></tr></tbody></table><p>举例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">chmod u+rw myfile </span><br><span class="line"></span><br><span class="line">chmod a+rx,u+w myfile</span><br><span class="line"></span><br><span class="line">chmod u+rwx,g+rx,o+rx myfile</span><br><span class="line"></span><br><span class="line">chmod a+rwx ,g-w,o-w myfile </span><br><span class="line"></span><br><span class="line">chmod a=rwx myfile </span><br><span class="line"></span><br><span class="line">chmod go=rx myfile </span><br><span class="line"></span><br><span class="line">chmod u-wx,go-x myfile </span><br><span class="line"></span><br><span class="line">chmod a+x myfile</span><br></pre></td></tr></table></figure><h4 id="改变文件-目录属主或组"><a href="#改变文件-目录属主或组" class="headerlink" title="改变文件/目录属主或组"></a>改变文件/目录属主或组</h4><ul><li><p>只有root用户才能改变文件的所有者 </p></li><li><p>只有root用户或所有者才能改变文件所属的组 </p></li><li><p>用 chown 命令改变属主 和/或 组 </p><ul><li>chown [-R] &lt;用户名[&lt;.|:&gt;组名]&gt; &lt;文件｜目录&gt; </li></ul></li><li><p>chgrp 被用来改变所属组 </p><ul><li>chgrp [-R] &lt;组名&gt; &lt;文件｜目录&gt;</li></ul></li></ul><p>举例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">chown soft myfile</span><br><span class="line"></span><br><span class="line">chgrp softgrp myfile </span><br><span class="line"></span><br><span class="line">chown .softgrp myfile </span><br><span class="line"></span><br><span class="line">chown -R soft mydir </span><br><span class="line"></span><br><span class="line">chgrp softgrp mydir</span><br><span class="line"></span><br><span class="line">chown -R :softgrp mydir</span><br><span class="line"></span><br><span class="line">chown -R soft.softgrp mydir</span><br></pre></td></tr></table></figure><h3 id="umask命令"><a href="#umask命令" class="headerlink" title="umask命令"></a>umask命令</h3><ul><li><p>查看当前 umask 值</p><ul><li>格式：umask [-S] </li></ul></li><li><p>修改当前 umask 值 </p><ul><li><p>格式：umask u1u2u3 </p><ul><li><p>u1表示的是不允许属主有的权限</p></li><li><p>u2表示的是不允许同组人有的权限 </p></li><li><p>u3表示的是不允许其他人有的权限</p></li></ul></li></ul></li><li><p>RHEL/CentOS默认的 umask 值 </p><ul><li><p>普通用户的 umask 是 002  </p></li><li><p>root用户的 umask 是 022</p></li></ul></li></ul><h4 id="umask值与文件-目录权限"><a href="#umask值与文件-目录权限" class="headerlink" title="umask值与文件/目录权限"></a>umask值与文件/目录权限</h4><table><thead><tr><th>umask值</th><th>新建目录的访问权限</th><th>新建文件的访问权限</th></tr></thead><tbody><tr><td>022</td><td>777-022= 755</td><td>666-022= 644</td></tr><tr><td>027</td><td>777-027= 750</td><td>666-027= 640</td></tr><tr><td>002</td><td>777-002= 775</td><td>666-002= 664</td></tr><tr><td>006</td><td>777-006= 771</td><td>666-006= 660</td></tr><tr><td>007</td><td>777-007= 770</td><td>666-007= 660</td></tr></tbody></table><h3 id="su与sudo"><a href="#su与sudo" class="headerlink" title="su与sudo"></a>su与sudo</h3><ul><li><p>su可用于在不注销的情况下切换到系统中的另一个用户。可以<strong>让一个普通用户拥有超级用户或其他用户的权限</strong>，也可以让超级用户以普通用户 的身份做一些事情。普通用户使用这个命令时，必须有超级用户或者其他用户的密码口令，退出可使用exit。</p></li><li><p>sudo可以让用户以其他身份来执行指定的命令，默认的身份为root。在 /etc/sudoers中，设置了可执行sudo命令的用户。若其未经授权的用户企 图使用sudo，则会发出警告的邮件给管理员。用户使用sudo时，必须先 输入密码，之后有5分钟的有效期限，超过期限则需要重新输入密码。 Sudo提供日志，忠实的记录每个用户使用sudo做了什么，并能将日志传 到中心主机或者日志服务器。 </p></li><li><p>通过sudo能把有些超级权限有针对性的下放，并且不需要用户知道root密 码，所以sudo相对于权限无限制性的su来说还是比较安全的，所以sudo 也能被称为受限制的su，另外sudo时需要授权许可的。</p></li><li><p>执行流程：当前用户切换到root并执行完后，直接退回到当前用户，前提 时要通过sudo的配置文件/etc/sudoers进行授权。</p></li></ul><p>语法：sudo [选项] command</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-b</td><td>在后台执行命令</td></tr><tr><td>-H</td><td>将HOME环境变量设为新身份的HOME环境变量</td></tr><tr><td>-k</td><td>结束密码的有效期限，下次在执行sudo时需要输入密码</td></tr><tr><td>-l</td><td>列出目前用户可执行与无法执行的命令，一般配置好 /etc/sudoers后，要用这个命令来查看和测试是否配置正确</td></tr><tr><td>-p</td><td>改变询问密码的提示符号</td></tr><tr><td>-s</td><td>执行指定的shell</td></tr><tr><td>-u用户</td><td>以指定的用户作为新的身份，若不加上此参数，则默认以root 作为新的身份</td></tr><tr><td>-v</td><td>显示用户的时间戳，如果用户运行sudo，输入用户密码后，在 段时间内可以不用输入口令，就可以直接进行sudo操作，用-v 可以跟踪最新的时间戳。</td></tr></tbody></table><h2 id="特殊权限"><a href="#特殊权限" class="headerlink" title="特殊权限"></a>特殊权限</h2><p>可执行文件的特殊权限 </p><ul><li><p>suid：使用命令的所属用户的权限来运行，而不是命令执行者的权 限 ，（对一个可执行文件，不是以发起者身份来获取资源，而是 以可执行文件的用户所有者身份来执行的）。</p></li><li><p>sgid：使用命令的组权限来运行目录的特殊权限，在设置了 sgid 权 限的目录中创建的文件会具备该目录的组权限。 </p></li><li><p>sticky-bit：在带有粘滞位的目录中的文件只能被文件的所属用户 和root用户删除，不管该目录的写入权限是如何设置的</p></li></ul><h3 id="设置特殊权限"><a href="#设置特殊权限" class="headerlink" title="设置特殊权限"></a>设置特殊权限</h3><table><thead><tr><th><strong>参数</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>u+s</td><td>设置SUID权限</td></tr><tr><td>u-s</td><td>取消SUID权限</td></tr><tr><td>g+s</td><td>设置SGID权限</td></tr><tr><td>g-s</td><td>取消SGID权限</td></tr><tr><td>o+t</td><td>设置SBIT权限</td></tr><tr><td>o-t</td><td>取消SBIT权限</td></tr></tbody></table><h4 id="特殊权限的文字表示方法"><a href="#特殊权限的文字表示方法" class="headerlink" title="特殊权限的文字表示方法"></a>特殊权限的文字表示方法</h4><p>SUID和SGID用s表示；Sticky-bit用t表示 </p><p>SUID是占用属主的x位置来表示 </p><p>SGID是占用组的x位置来表示 </p><p>sticky-bit是占用其他人的x位置来表示 </p><p>例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-rwsr-xr-x 1 root root 23420 2019-08-11 /usr/bin/passwd </span><br><span class="line"></span><br><span class="line">-rwxr-sr-x 1 root tty 11084 03-10 21:28 /usr/bin/write </span><br><span class="line"></span><br><span class="line">-rwsr-sr-x 1 root root 315416 2019-01-06 /usr/bin/crontab </span><br><span class="line"></span><br><span class="line">drwxrws--- 3 root admin 4096 06-18 01:01 /admin/sales </span><br><span class="line"></span><br><span class="line">drwxrwxrwt 5 root root 4096 06-18 01:01 /tmp</span><br></pre></td></tr></table></figure><h4 id="特殊权限的数值表示方法"><a href="#特殊权限的数值表示方法" class="headerlink" title="特殊权限的数值表示方法"></a>特殊权限的数值表示方法</h4><table><thead><tr><th>权限</th><th>对应数字</th></tr></thead><tbody><tr><td>SUID</td><td>4</td></tr><tr><td>SGID</td><td>2</td></tr><tr><td>Sticky-bit</td><td>1</td></tr><tr><td>-</td><td>0</td></tr></tbody></table><p>举例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-rwsr-xr-x ——4755</span><br><span class="line"></span><br><span class="line">-rwxr-sr-x ——2755</span><br><span class="line"></span><br><span class="line">-rwsr-sr-x ——6755</span><br><span class="line"></span><br><span class="line">drwxrws---——2770 </span><br><span class="line"></span><br><span class="line">drwxrwxrwt ——1777 </span><br><span class="line"></span><br><span class="line">-rwxr-xr-x ——0755</span><br></pre></td></tr></table></figure><h4 id="使用chmod设置特殊权限"><a href="#使用chmod设置特殊权限" class="headerlink" title="使用chmod设置特殊权限"></a>使用chmod设置特殊权限</h4><ul><li><p>为程序 ~/bin/myapp 添加 SUID权限 </p><ul><li>```<br>#chmod u+s ~/bin/myapp #chmod 4755 ~/bin/myapp<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">- 为目录 /home/groupspace 添加 SGID权限 </span><br><span class="line"></span><br><span class="line">  - ```</span><br><span class="line">    #chmod g+s /home/groupspace </span><br><span class="line">    </span><br><span class="line">    #chmod 2755 /home/groupspace </span><br></pre></td></tr></table></figure></li></ul></li><li><p>为目录 /home/share 添加 sticky-bit 权限 </p><ul><li><pre><code>#chmod o+t /home/share #chmod 1755 /home/share</code></pre></li></ul></li></ul><h2 id="文件隐藏属性"><a href="#文件隐藏属性" class="headerlink" title="文件隐藏属性"></a>文件隐藏属性</h2><ul><li><strong>chattr命令</strong></li></ul><p>chattr命令用于设置文件的隐藏权限，英文全称为change attributes，语法格式为“chattr [参数] 文件名称”。</p><ul><li><strong>lsattr命令</strong></li></ul><p>lsattr命令用于查看文件的隐藏权限，英文全称为“list attributes”，语法格式为“lsattr [参数] 文件名称”。</p><h3 id="chattr命令中的参数及其作用"><a href="#chattr命令中的参数及其作用" class="headerlink" title="chattr命令中的参数及其作用"></a>chattr命令中的参数及其作用</h3><table><thead><tr><th><strong>参数</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>i</td><td>无法对文件进行修改；若对目录设置了该参数，则仅能修改其中的子文件内容而不能新建或删除文件</td></tr><tr><td>a</td><td>仅允许补充（追加）内容，无法覆盖/删除内容（Append Only）</td></tr><tr><td>S</td><td>文件内容在变更后立即同步到硬盘（sync）</td></tr><tr><td>s</td><td>彻底从硬盘中删除，不可恢复（用零块填充原文件所在的硬盘区域）</td></tr><tr><td>A</td><td>不再修改这个文件或目录的最后访问时间（Atime）</td></tr><tr><td>b</td><td>不再修改文件或目录的存取时间</td></tr><tr><td>D</td><td>检查压缩文件中的错误</td></tr><tr><td>d</td><td>使用dump命令备份时忽略本文件/目录</td></tr><tr><td>c</td><td>默认将文件或目录进行压缩</td></tr><tr><td>u</td><td>当删除该文件后依然保留其在硬盘中的数据，方便日后恢复</td></tr><tr><td>t</td><td>让文件系统支持尾部合并（tail-merging）</td></tr><tr><td>x</td><td>可以直接访问压缩文件中的内容</td></tr></tbody></table><h2 id="文件访问控制列表"><a href="#文件访问控制列表" class="headerlink" title="文件访问控制列表"></a>文件访问控制列表</h2><ul><li>setfacl命令</li></ul><p>setfacl命令用于管理文件的ACL权限规则，英文全称为“set files ACL”，</p><p>语法格式为“setfacl [参数] 文件名称”。</p><ul><li>getfacl命令</li></ul><p>getfacl命令用于查看文件的ACL权限规则，英文全称为“get files ACL”，</p><p>语法格式为“getfacl [参数] 文件名称”。</p><table><thead><tr><th><strong>参数</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>-m</td><td>修改权限</td></tr><tr><td>-M</td><td>从文件中读取权限</td></tr><tr><td>-x</td><td>删除某个权限</td></tr><tr><td>-b</td><td>删除全部权限</td></tr><tr><td>-R</td><td>递归子目录</td></tr></tbody></table><p><em>这点不做重点要求，若有同学有意向考证，则需掌握</em></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux用户与权限：用户与组管理</title>
      <link href="/2022/04/24/Linux%E7%94%A8%E6%88%B7%E4%B8%8E%E6%9D%83%E9%99%90%EF%BC%9A%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84%E7%AE%A1%E7%90%86/"/>
      <url>/2022/04/24/Linux%E7%94%A8%E6%88%B7%E4%B8%8E%E6%9D%83%E9%99%90%EF%BC%9A%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux用户与权限：用户与组管理"><a href="#Linux用户与权限：用户与组管理" class="headerlink" title="Linux用户与权限：用户与组管理"></a>Linux用户与权限：用户与组管理</h1><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><p>groups 查看当前登录用户的组内成员<br>groups gliethttp 查看gliethttp用户所在的组,以及组内成员<br>whoami 查看当前登录用户名</p><ul><li><p>任何用户被分配一个独特的用户id号(UID)，当用户登录时，它被分配一个主目录并 且运行一个程序(通常是一个shell程序) </p></li><li><p>没有权限许可用户不能读取、写或者执行其它用户的文件 </p></li><li><p>用户帐号通常从UID 500开始(员工辞职后若删除原ID也删除，再重新建立除非指定， 否则顺后面一位数字，例如503</p></li><li><p>每一个文件都属于一个UID和GID所有（每一个用户都有一个匹配的用户和组） </p></li><li><p>任何进程运行时都带一个UID和一个或多个GID标识符 </p><ul><li>通常决定于哪个用户执行这个进程 </li></ul></li><li><p>三种访问类别 </p><ul><li>运行的进程跟文件有着同样的UID（user) </li><li>运行的进程跟文件有着同样的GID(group) </li><li>其它进程(other）</li></ul></li></ul><h3 id="1-添加新用户-useradd-adduser"><a href="#1-添加新用户-useradd-adduser" class="headerlink" title="1. 添加新用户 useradd/adduser"></a>1. 添加新用户 useradd/adduser</h3><ul><li>格式:useradd/adduser [选项] [用户名]</li></ul><p>参数： </p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-u</td><td>指定用户的UID值</td></tr><tr><td>-g</td><td>指定用户所属的默认组</td></tr><tr><td>-G</td><td>指定用户附加组</td></tr><tr><td>-m</td><td>若用户主目录不存在则建立用户主目录</td></tr><tr><td>-d</td><td>指定主目录</td></tr><tr><td>-e</td><td>指定用户帐号有效日期(YYYY-MM-DD)</td></tr><tr><td>-s</td><td>指定默认的shell类型</td></tr><tr><td>-M</td><td>不建立用户主目录</td></tr></tbody></table><p>实例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#useradd u2</span><br><span class="line"></span><br><span class="line">#useradd -g g2 u2 </span><br><span class="line"></span><br><span class="line">#useradd -e 2019-01-12 u3</span><br><span class="line"></span><br><span class="line">#useradd -g group1 -e 12/12/2019 user1</span><br><span class="line">#passwd user1</span><br><span class="line"></span><br><span class="line">#useradd -G staff tom </span><br><span class="line">#passwd tom</span><br><span class="line"></span><br><span class="line">#useradd -G ftpgrp -d /var/ftp2 -s /sbin/nologin -M ftp1</span><br><span class="line">#passwd ftp1</span><br></pre></td></tr></table></figure><h3 id="2-设置用户口令passwd"><a href="#2-设置用户口令passwd" class="headerlink" title="2. 设置用户口令passwd"></a>2. 设置用户口令passwd</h3><ul><li><p>格式：passwd [选项] [用户名] </p></li><li><p>passwd //设置密码、激活用户；//注：新建的帐号都为禁用状态；</p></li><li><p>注：root用户可以更改所在用户的密码，而普通的用户只能修改本身的密码；</p></li></ul><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-l</td><td>锁定帐号：即不能用该帐号登录</td></tr><tr><td>-u</td><td>解锁帐号；</td></tr><tr><td>-d</td><td>删除帐号的密码，超级用户使用</td></tr><tr><td>-k</td><td>保持身份验证不过期</td></tr><tr><td>-e</td><td>终止指名账户的密码</td></tr><tr><td>-w</td><td>在密码过期前多少天提醒用户</td></tr><tr><td>-x/-n</td><td>密码的最长/最短有效时限</td></tr><tr><td>-f</td><td>强制执行操作</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#passwd –x 60 user 设置 user用户的密码有效期</span><br><span class="line"></span><br><span class="line">#passwd -w 10 user 设置 user 用户的密码失效前10天开始提醒用户 </span><br><span class="line"></span><br><span class="line">#passwd -l user 可以锁定用户 user  </span><br><span class="line"></span><br><span class="line">#passwd -s user 显示用户user 当前已被锁定 </span><br><span class="line"></span><br><span class="line">#passwd -u user 解除user用户帐号的锁定</span><br></pre></td></tr></table></figure><h3 id="3-批量用户管理"><a href="#3-批量用户管理" class="headerlink" title="3. 批量用户管理"></a>3. 批量用户管理</h3><h4 id="批量创建用户帐号"><a href="#批量创建用户帐号" class="headerlink" title="批量创建用户帐号"></a>批量创建用户帐号</h4><p>输入 # newusers &lt; new 批量新建用户帐号 </p><p>格式– newusers   &lt;filename&gt;</p><p>-filename的格式与 /etc/passwd 一致</p><p>举例 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#vi userfile.txt</span><br><span class="line">#cat userfile.txt </span><br><span class="line">user1:\x:1001:1001::/home/user1:/bin/bash</span><br><span class="line">user2:x\:1002:1002::/home/user2:/bin/bash</span><br><span class="line">ftpuser1:\x:2001:2001::/home/ftpuser1:/sbin/nologin</span><br><span class="line">ftpuser2:\x:2002:2002::/home/ftpuser2:/sbin/nologin </span><br><span class="line">#newusers userfile.txt</span><br></pre></td></tr></table></figure><h4 id="批量设置密码"><a href="#批量设置密码" class="headerlink" title="批量设置密码"></a>批量设置密码</h4><p>输入 # <code>pwunconv</code> 暂时取消shadow加密  </p><p>#<code>chpasswd &lt; newpasswd</code> 批量设置用户密码  </p><p>#<code>pwconv</code> 恢复用户密码</p><p>格式 – <code>chpasswd &lt; &lt;filename\&gt;</code></p><p>-filename 每一行的格式：</p><p><code>username:password</code></p><p>username必须是系统上已存在的用户</p><p>举例 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#vi userpwdfile.txt; chmod 600 userpwdfile.txt</span><br><span class="line">#cat userpwdfile.txt </span><br><span class="line">user1:123456 </span><br><span class="line">user2:passwd </span><br><span class="line">ftpuser1:123qaz </span><br><span class="line">ftpuser2:xsw321 </span><br><span class="line">#chpasswd &lt; userpwdfile.txt</span><br></pre></td></tr></table></figure><h3 id="4-删除用户"><a href="#4-删除用户" class="headerlink" title="4.删除用户"></a>4.删除用户</h3><ul><li><p>格式： userdel [选项] [ 用户名] </p></li><li><p>选项： </p></li></ul><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-r</td><td>删除用户并同时删除用户主目录及本地邮件 存储文件等信息</td></tr><tr><td>-f</td><td>强制删除用户</td></tr></tbody></table><p>实例：</p><p>#<code>userdel -r user1</code>  </p><p><strong>注意：如果只是临时禁止用户登录系统，那么不用删除账户，可以采取 临时查封用户账号的办法。编辑口令文件/etc/passwd，将*放在要被查封 用户的加密口领域，这样该用户就不能登录系统了。但是主目录，文件 以及组信息还是保留的。如果以后需要修改，将*改为x</strong></p><h3 id="5-修改用户信息"><a href="#5-修改用户信息" class="headerlink" title="5.修改用户信息"></a>5.修改用户信息</h3><ul><li><p>格式： usermod [选项] [用户名] </p></li><li><p>选项：</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-l</td><td>更改用户名</td></tr><tr><td>-d</td><td>更改用户主目录</td></tr><tr><td>G</td><td>修改附加组</td></tr><tr><td>-g</td><td>修改主组</td></tr><tr><td>-L</td><td>锁定用户帐号(不能登录)</td></tr><tr><td>-U</td><td>解锁用户帐号</td></tr><tr><td>-c</td><td>改变用户的表述信息</td></tr><tr><td>-e</td><td>设置用户账户的过期时间</td></tr><tr><td>-s</td><td>改变用户的默认shell</td></tr></tbody></table><p>实例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#usermod -d /abc u3</span><br><span class="line"> usermod -G group2 u3 </span><br><span class="line">#usermod -l user3 u3</span><br><span class="line"></span><br><span class="line">#usermod -L user1 </span><br><span class="line">#usermod -U user1</span><br></pre></td></tr></table></figure></li></ul><h2 id="组管理"><a href="#组管理" class="headerlink" title="组管理"></a>组管理</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><ul><li><p>用户指派给组</p></li><li><p>每一个组被分配一个独特的组ID(GID) </p></li><li><p>GID保存在/etc/group中，加密后的密码存放在/etc/gshadow中</p></li><li><p>每一个用户都有自己的私有组 </p></li><li><p>同一个组中的所有用户能共享属于这个组的文件</p></li></ul><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><ol><li>分类法一：</li></ol><ul><li><p>标准组 </p><ul><li><p>标准组可以容纳多个用户 </p></li><li><p>若使用标准组，在创建一个新的用户时就应该指定他所属于的组</p></li></ul></li><li><p>私有组 </p><ul><li><p>私有组中只有用户自己 </p></li><li><p>当在创建一个新用户时， 若没有指定他所属于的组，RHEL/CentOS 就建立一个和该用户同名的私有组，且用户被分配到这个私有组中 </p></li><li><p>优点：防止新文件归 “公共” 组所有 </p></li><li><p>缺点：可能会鼓励创建 “任何人都可以访问” 的文件</p></li></ul></li></ul><ol start="2"><li>分类法二： </li></ol><ul><li><p>主要组群：当一个用户账户属于多个组群成员时，登录后所属的组群 便是主要组群，其他的组群是次要组群，一个用户账户只能属于一个 主要组群，即主组 </p></li><li><p>次要组群：也称为附加组群，一个用户账户可以属于多个次要组群</p></li></ul><h3 id="组管理工具"><a href="#组管理工具" class="headerlink" title="组管理工具"></a>组管理工具</h3><h4 id="groupadd添加组"><a href="#groupadd添加组" class="headerlink" title="groupadd添加组"></a>groupadd添加组</h4><p>格式 # groupadd [选项] [组群名]  </p><p>选项</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-g</td><td>为组群设置GID</td></tr><tr><td>-r</td><td>创建系统组群</td></tr><tr><td>-o</td><td>允许使用和别的组群相同的GID创建组群</td></tr><tr><td>-f</td><td>即使组群已经存在，还是强制创建组群</td></tr><tr><td>-p (密码)</td><td>为新组群设置加密的密码</td></tr></tbody></table><p>举例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#groupadd mygroup 创建组</span><br><span class="line"></span><br><span class="line">#groupadd -r sysgroup 创建系统组群 </span><br><span class="line"></span><br><span class="line">#groupadd -g 888 group2 创建指定GID组</span><br></pre></td></tr></table></figure><h4 id="groupdel删除组"><a href="#groupdel删除组" class="headerlink" title="groupdel删除组"></a>groupdel删除组</h4><p><strong>groupdel：删除一个已存在组，但不能删主组</strong></p><p>需要从系统上删除组群时，可用groupdel命令来完成这项工作，如果该组群中仍包 括某些用户，则必须先使用userdel命令删除这些用户后，才能使用groupdel命令删 除组群。如果有任何一个组群的使用者在线上就不能移除该组群。</p><p>格式：# groupdel [组群名]  </p><p>举例：</p><p>删除组群user1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#groupdel user1 </span><br><span class="line"></span><br><span class="line">#cat /etc/group |grep user1</span><br></pre></td></tr></table></figure><h4 id="groupmod-修改组"><a href="#groupmod-修改组" class="headerlink" title="groupmod 修改组"></a>groupmod 修改组</h4><p>格式 </p><p>#groupmod [选项][组群名] </p><p>选项</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-g</td><td>设置组群</td></tr><tr><td>-o</td><td>重复使用组群GID</td></tr><tr><td>-n(新组群名)</td><td>更改组群名称</td></tr></tbody></table><p>举例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#groupmod -g 503 mygroup</span><br><span class="line"></span><br><span class="line">#groupmod –n newgroup mygroup</span><br></pre></td></tr></table></figure><h4 id="gpasswd设置组群密码"><a href="#gpasswd设置组群密码" class="headerlink" title="gpasswd设置组群密码"></a>gpasswd设置组群密码</h4><p>格式： gpasswd [选项][组群名]</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-a</td><td>将一个用户加入到一个组群中</td></tr><tr><td>-d</td><td>将一个用户从一个组群中删除</td></tr><tr><td>-r</td><td>取消一个组群的组群密码</td></tr><tr><td>-R</td><td>限制其成员访问组</td></tr><tr><td>-A(组群管理员)</td><td>指定组群的管理员</td></tr><tr><td>-M(用户)</td><td>设置组群的成员列表</td></tr></tbody></table><p>举例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> #gpasswd –A pl mygroup //将pl设为mygroup群组的管理员 </span><br><span class="line"></span><br><span class="line">$gpasswd –a aaa mygroup //pl可以向mygroup群组添加用户aaa</span><br></pre></td></tr></table></figure><h4 id="newgrp新组名"><a href="#newgrp新组名" class="headerlink" title="newgrp新组名"></a>newgrp新组名</h4><ul><li><p>给组账号设置完密码后，用户登录系统，使用newgrp命令，输入给组 账号设置的密码，就可以临时添加到指定组，可以管理组用户，具有组权限。</p></li><li><p>使用newgrp命令可以让用户账户以另一个组群的身份进行登录，即用 相同的账户名、不同的组群身份登录系统。如果要切换，用户必须是 该组群的用户，否则无法登录指定的组群。单一用户如果要同时隶属 多个组群，需要利用交替用户的设置。如果不指定组群名称，则 newgrp命令会登录该用户名称的预设组群。</p></li><li><p>语法：newgrp [组群名]</p></li></ul><p>举例： • 将用户pl以组群user的身份登录系统 • #su – pl • #id • #newgrp user • #id pl</p><h2 id="用户和组的关系"><a href="#用户和组的关系" class="headerlink" title="用户和组的关系"></a>用户和组的关系</h2><ul><li><p>组是用户的集合。</p></li><li><p>一个标准组可以容纳多个用户。</p></li><li><p>同一个用户可以同属于多个组，这些组可以是私有组，也可以是标准组。</p></li><li><p>当一个用户同属于多个组时，将这些组习惯分为 ：</p><ul><li><p>主组（初始组）：用户登录系统时 的组。 </p></li><li><p>附加组：可切换的其他组。</p></li></ul></li></ul><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>1、创建一个用户 test </p><p><code>useradd test</code> </p><p>2、创建一个用户test1 指定其主组为test </p><p><code>useradd -g test test1</code> </p><p>3、创建一个用户 test2 指定其uid 为1000 </p><p><code>useradd -u 1000 test2</code> </p><p>4、将test1、test2 加入到test组中</p><p><code>usermod -a -G test test1</code> </p><p><code>usermod -a -G test test2</code> </p><p>*5、添加一个用户 user3 uid 为600 设置其家目录在/data/user3 主组为 test 附加组为 test1 test2</p><p>需要创建data 目录</p><p> <code>#mkdir /data</code></p><p><code>useradd -u 600 -d /data/user3 -g test user3</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux文件与目录管理：文本内容显示与处理</title>
      <link href="/2022/04/23/Linux%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86%EF%BC%9A%E6%96%87%E6%9C%AC%E5%86%85%E5%AE%B9%E6%98%BE%E7%A4%BA%E4%B8%8E%E5%A4%84%E7%90%86/"/>
      <url>/2022/04/23/Linux%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86%EF%BC%9A%E6%96%87%E6%9C%AC%E5%86%85%E5%AE%B9%E6%98%BE%E7%A4%BA%E4%B8%8E%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux文件与目录管理：文本内容显示与处理"><a href="#Linux文件与目录管理：文本内容显示与处理" class="headerlink" title="Linux文件与目录管理：文本内容显示与处理"></a>Linux文件与目录管理：文本内容显示与处理</h1><h2 id="内容显示"><a href="#内容显示" class="headerlink" title="内容显示"></a>内容显示</h2><h3 id="1-cat"><a href="#1-cat" class="headerlink" title="1. cat"></a>1. cat</h3><p>功能：使用cat命令可以显示文本文件的内容，也可以把几个文件内容附加到另一个 文件中。如果没有指定文件，或者文件为“.”，那么就从标准输入读取。 </p><p>语法：cat [选项] [文件] </p><p>选项含义：</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-n</td><td>对输出的所有行编号</td></tr><tr><td>-b</td><td>对非空输出行编号</td></tr><tr><td>-s</td><td>当遇到有连续两行以上的空白行时，就将其替换为一 行的空白行</td></tr><tr><td>-E</td><td>在每行结束处显示$</td></tr></tbody></table><h3 id="2-head"><a href="#2-head" class="headerlink" title="2. head"></a>2. head</h3><p>功能：使用head命令显示指定文件的前若干行 </p><p>语法：head [选项] [文件] </p><p>选项含义：</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-n</td><td>输出文件前n行，默认10行</td></tr><tr><td>-c</td><td>指定输出文件的大小</td></tr></tbody></table><h3 id="3-tail"><a href="#3-tail" class="headerlink" title="3. tail"></a>3. tail</h3><p>功能：使用tail命令显示指定文件的末尾若干行 </p><p>语法：tail [选项] [文件] </p><p>选项含义：</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-n</td><td>输出文件后n行，默认10行</td></tr><tr><td>-f filename</td><td>把filename最后内容显示在屏幕上 ，并不断刷新， 常用语日志文件的实时监控，ctrl+c结束命令</td></tr></tbody></table><h3 id="4-cut"><a href="#4-cut" class="headerlink" title="4. cut"></a>4. cut</h3><p>功能：使用cut从每行中显示出选定的字节、字符或字段（域） </p><p>语法：cut [选项] [文件] </p><p>选项含义：</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-b</td><td>只选中指定的这些字节</td></tr><tr><td>-c</td><td>只选中指定的这些字符</td></tr><tr><td>-d</td><td>使用指定分界符代替制表符作为区域分解</td></tr><tr><td>-f</td><td>指定文件中设想被定界符（缺省情况下为制表符）隔开的字 段的列表</td></tr><tr><td>-n</td><td>取消分割多字节字符。</td></tr><tr><td>-s</td><td>不打印没有包含分界符的行</td></tr></tbody></table><p><strong>案例</strong> </p><p>1、 显示/etc/passwd文件中用户登录名和用户名全称字段，即第一个和第五个字段，由：隔开 </p><p>#<code>cut -f 1,5 –d : /etc/passwd</code></p><p>#<code>cat /etc/passwd |cut -d : -f 1,5</code></p><h3 id="5-less"><a href="#5-less" class="headerlink" title="5. less"></a>5. less</h3><p>功能：使用less从可以回卷显示文本文件的内容，允许往回卷动 </p><p>语法：less [选项] [文件] </p><p>选项含义：</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>v</td><td>用文本编辑器打开该文件</td></tr><tr><td>n/N</td><td>跳转到next/previous匹配的地方</td></tr><tr><td>/test</td><td>搜索text</td></tr><tr><td>-S</td><td>行过长时间将超出部分舍弃</td></tr><tr><td>-e</td><td>当文件显示结束后，自动离开</td></tr><tr><td>-i</td><td>忽略搜索时的大小写</td></tr><tr><td>-m</td><td>显示类似more命令的百分比</td></tr></tbody></table><h3 id="6-more"><a href="#6-more" class="headerlink" title="6. more"></a>6. more</h3><p>功能：使用more分页显示文本文件 </p><p>语法：more [选项] [文件] </p><p>选项含义：</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-f</td><td>计算行数时，使用实际的行数，而不是自动换行过后的行数</td></tr><tr><td>-p</td><td>不以卷动的方式显示每一页，而是先清除屏幕后在显示内容</td></tr><tr><td>-c</td><td>跟-p选项类似，不同的是先显示内容再清除其他旧资料</td></tr><tr><td>-s</td><td>当遇到有连续两行以上的空白行时，就将其替换为一行的空 白行</td></tr><tr><td>-u</td><td>不显示下行号</td></tr><tr><td>+n</td><td>从第n行开始显示文件内容，n代表数字</td></tr><tr><td>-n</td><td>一次显示的行数，n代表数字</td></tr></tbody></table><p><strong>Less和more区别</strong> </p><p>less:一次查看一个页面的输入 该命名的用法和more相似，可以查看超过一屏的文件内容，不同的是，less 命令除了可以按空格键向下显示文件外，还可以利用方向键来滚动显示文件， 要结束浏览时只要在less的提示符”:”下按Q键即可。 </p><p>$<code>ls –l /etc | less</code>  </p><p>more：该命令一般用于显示内容超过一屏的文件，为了避免文件内容显示瞬 间就消失，可以使用more命令让文件显示满一屏时就暂停，在按下任意键的 时候继续显示下一屏内容，例如，当ls命令查看文件列表时，若文件太多， 则可配合more命令来使用。如下所示 </p><p>$<code>ls - al /etc | more</code></p><h3 id="7-grep"><a href="#7-grep" class="headerlink" title="7. grep"></a>7. grep</h3><p>功能：使用grep分页显示文本文件 </p><p>语法：grep [选项] [查找模式] [文件] </p><p>选项含义：</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-E</td><td>模式是一个可亏站的正则表达式</td></tr><tr><td>-i</td><td>比较时不区分大小写</td></tr><tr><td>-c</td><td>只显示匹配行的数量</td></tr><tr><td>-h</td><td>抑制输出的文件名前缀</td></tr><tr><td>-r</td><td>递归读取每个目录下的所有文件</td></tr><tr><td>-q</td><td>禁止一切正常输出</td></tr><tr><td>-s</td><td>取消错误信息</td></tr></tbody></table><p><strong>案例</strong> </p><p>1、在文件/etc/passwd中搜索匹配字符“zhangsan” </p><p>#grep ‘zhangsan’ /etc/passwd </p><p>2、显示所有以d开头的文件中包含test 的行数据内容 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#cat d1 </span><br><span class="line">1 </span><br><span class="line">test </span><br><span class="line">#cat d2 </span><br><span class="line">2 </span><br><span class="line">test </span><br><span class="line">#grep ‘test’ d* </span><br></pre></td></tr></table></figure><p>3、查找sshd进程信息 </p><p>#<code>ps –ef |grep sshd</code> </p><p>4、显示d开头的文件中包含“aa”行数据内容 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#cat file1 </span><br><span class="line">abababababababaa </span><br><span class="line">#cat file2 </span><br><span class="line">#aaaaaaaaa </span><br><span class="line">#grep‘aa’d*</span><br></pre></td></tr></table></figure><p>5、在/root/aa文件中输出不是以b开头的行内容 </p><p>#<code>grep -v ^b /root/aa</code></p><h2 id="内容处理"><a href="#内容处理" class="headerlink" title="内容处理"></a>内容处理</h2><h3 id="1-sort"><a href="#1-sort" class="headerlink" title="1. sort"></a>1. sort</h3><p>功能：使用sort命令可以对文件中的数据进行排序，并将结果显示在标准输出上。 </p><p>语法：sort [选项] [文件] </p><p>选项含义：</p><table><thead><tr><th align="center">选项</th><th>含义</th></tr></thead><tbody><tr><td align="center">-m</td><td>如果给定文件已排好序，那么合并文件</td></tr><tr><td align="center">-u</td><td>对排序后认为相同的行只留其中一行</td></tr><tr><td align="center">-d</td><td>按字典顺序排序，比较时仅字母、数字、空格和制表 符有意义</td></tr><tr><td align="center">-f</td><td>将小写字母与大写字母同等对待</td></tr><tr><td align="center">-r</td><td>按逆序输出排列结果</td></tr><tr><td align="center">-c</td><td>检查给定文件是否已排好序，如果没有，则打印一个 出错信息，并以状态值1退出</td></tr></tbody></table><h3 id="3-uniq"><a href="#3-uniq" class="headerlink" title="3. uniq"></a>3. uniq</h3><p>功能：使用uniq命令可以将文件内的重复行数据从输出文件中删除，只留下每条记 录的唯一样本。 </p><p>语法：uniq [选项] [文件] </p><p>选项含义：</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-i</td><td>在比较的时候不区分大小写</td></tr><tr><td>-u</td><td>只显示文件中不重复的行</td></tr><tr><td>-s K</td><td>比较时跳过前K个字符，K是数字</td></tr><tr><td>-D</td><td>显示所有输出的行</td></tr><tr><td>-d</td><td>只输出重复的行</td></tr><tr><td>-c</td><td>显示输出中在每行行首加上本行在文件中出现的 次数</td></tr></tbody></table><h3 id="4-comm"><a href="#4-comm" class="headerlink" title="4. comm"></a>4. comm</h3><p>功能：使用comm逐行比较已排序过的文件，并将结果显示出来 </p><p>语法：comm [选项] [文件1] [文件2] </p><p>选项含义：</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-1</td><td>不输出文件1特有的行</td></tr><tr><td>-2</td><td>不输出文件2特有的行</td></tr><tr><td>-3</td><td>不输出文件3特有的行</td></tr></tbody></table><p><strong>案例</strong> </p><p>file1文件内存放ab abab，file2文件内存放ab aaab </p><p>1、比较文件file1和file2的文件内容 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#cat file1 </span><br><span class="line">#cat file2 </span><br><span class="line">#comm file1 file2 </span><br></pre></td></tr></table></figure><p>2、比较文件file1和file2，只显示文件file1和file2中相同行的数据内容 </p><p>#<code>comm -12 file1 file2</code></p><h3 id="4-diff"><a href="#4-diff" class="headerlink" title="4. diff"></a>4. diff</h3><p>功能：使用diff逐行比较两个文本文件，列出不同之处 </p><p>语法：diff [选项] [文件1] [文件2] </p><p>选项含义：</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-b</td><td>忽略行尾的空格，而字符串中的一个或多个空格符都 视为相等</td></tr><tr><td>-c</td><td>使用上下文输出格式</td></tr><tr><td>-r</td><td>当比较目录时，递归比较任何找到的子目录</td></tr><tr><td>-y</td><td>以两列并排格式输出</td></tr><tr><td>-w</td><td>忽略所有的空白</td></tr><tr><td>-a</td><td>所有的文件都视为文本文件来逐行比较</td></tr><tr><td>-q</td><td>只比较简短的输出文件是否不同</td></tr><tr><td>-s</td><td>当两个文件相同时报告</td></tr></tbody></table><p><strong>案例</strong> </p><p>file1文件内存放abab aaaa，file2文件内存放aaaa </p><p>1、比较文件file1和file2的文件内容，列出其不同之处 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#cat file1 </span><br><span class="line">#cat file2 </span><br><span class="line">#diff file1 file2</span><br></pre></td></tr></table></figure><h3 id="5-echo"><a href="#5-echo" class="headerlink" title="5. echo"></a>5. echo</h3><p>功能：在显示器上显示一段文字，一般起到提示的作用 </p><p>语法：echo [选项] [字符串或环境变量] </p><p>选项含义：</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-n</td><td>表示输出文字后不换行，字符串可以加引号，表示将字符串 原样输出，也可以不加引号，表示将字符串中的各个单词作 为字符串输出，各字符串之间用一个空格分开</td></tr><tr><td>-e</td><td>出现特殊字符时，特殊处理</td></tr></tbody></table><p>案例 </p><p>file1文件内存放ab abab，file2文件内存放ab aaab </p><p>1、使用echo命令追加内容 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#echo e1234 &gt;file1 </span><br><span class="line">#echo e4321 &gt;&gt;file1 </span><br><span class="line">#cat file1 </span><br><span class="line">#echo e1234 &gt;file1 </span><br><span class="line">#cat file1 </span><br></pre></td></tr></table></figure><p>2、<code>echo hello</code>  </p><p>3、<code>echo $HOME</code></p><h3 id="6-join"><a href="#6-join" class="headerlink" title="6. join"></a>6. join</h3><p>功能：将两个文件中指定栏位相同的行并加以合并，再输出 </p><p>语法：join [-i] [-a1或2] [-e字符串] [-o格式] [-t字符] </p><p>选项含义： </p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-a</td><td>除了显示原来的输出内容之外，还显示指令文件中没有相同栏位的行。</td></tr><tr><td>-e</td><td>若[文件1]与[文件2]中找不到指定的栏位，则在输出中填入选项中的字符串。</td></tr><tr><td>-i</td><td>比较栏位内容时，忽略大小写的差异。</td></tr><tr><td>-o</td><td>按照指定的格式来显示结果。</td></tr><tr><td>-t</td><td>使用栏位的分隔字符。</td></tr><tr><td>-v</td><td>跟-a相同，但是只显示文件中没有相同栏位的行。</td></tr><tr><td>-1</td><td>连接[文件1]指定的栏位。</td></tr><tr><td>-2</td><td>连接[文件2]指定的栏位。</td></tr></tbody></table><p>案例 显示file1和file2文件内容，并合并 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#cat file1 </span><br><span class="line">#cat file2 </span><br><span class="line">#join file1 file2 </span><br><span class="line">#join file2 file1</span><br></pre></td></tr></table></figure><h2 id="Vim文本编辑器"><a href="#Vim文本编辑器" class="headerlink" title="Vim文本编辑器"></a>Vim文本编辑器</h2><h3 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h3><p>控制光标移动，可对文本进行复制、粘贴、删除和查找等工作。</p><table><thead><tr><th><strong>命令</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>dd</td><td>删除（剪切）光标所在整行</td></tr><tr><td>5dd</td><td>删除（剪切）从光标处开始的5行</td></tr><tr><td>yy</td><td>复制光标所在整行</td></tr><tr><td>5yy</td><td>复制从光标处开始的5行</td></tr><tr><td>n</td><td>显示搜索命令定位到的下一个字符串</td></tr><tr><td>N</td><td>显示搜索命令定位到的上一个字符串</td></tr><tr><td>u</td><td>撤销上一步的操作</td></tr><tr><td>p</td><td>将之前删除（dd）或复制（yy）过的数据粘贴到光标后面</td></tr></tbody></table><h3 id="输入模式"><a href="#输入模式" class="headerlink" title="输入模式"></a>输入模式</h3><p>正常的文本录入。</p><h3 id="末行模式"><a href="#末行模式" class="headerlink" title="末行模式"></a>末行模式</h3><p>保存或退出文档，以及设置编辑环境。</p><table><thead><tr><th><strong>命令</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>:w</td><td>保存</td></tr><tr><td>:q</td><td>退出</td></tr><tr><td>:q!</td><td>强制退出（放弃对文档的修改内容）</td></tr><tr><td>:wq!</td><td>强制保存退出</td></tr><tr><td>:set nu</td><td>显示行号</td></tr><tr><td>:set nonu</td><td>不显示行号</td></tr><tr><td>:命令</td><td>执行该命令</td></tr><tr><td>:整数</td><td>跳转到该行</td></tr><tr><td>:s/one/two</td><td>将当前光标所在行的第一个one替换成two</td></tr><tr><td>:s/one/two/g</td><td>将当前光标所在行的所有one替换成two</td></tr><tr><td>:%s/one/two/g</td><td>将全文中的所有one替换成two</td></tr><tr><td>?字符串</td><td>在文本中从下至上搜索该字符串</td></tr><tr><td>/字符串</td><td>在文本中从上至下搜索该字符串</td></tr></tbody></table><h3 id="三种切换"><a href="#三种切换" class="headerlink" title="三种切换"></a>三种切换</h3><p>命令模式    [a\i\o 等键]    输入模式   [Esc]       命令模式 </p><p>命令模式    [:键]                末行模式    [Esc]     命令模式 </p><h2 id="命令相关"><a href="#命令相关" class="headerlink" title="命令相关"></a>命令相关</h2><h3 id="命令行自动补全"><a href="#命令行自动补全" class="headerlink" title="命令行自动补全"></a>命令行自动补全</h3><p>在Linux系统中，有太多的命令和文件名称需要记忆，使用命令行补全功能可以 快速地写出文件名和命令名。 </p><p>按Tab键可以自动补全 </p><p>案例 #ifco 按下Tab键可补全ifconfig命令</p><h3 id="历史命令"><a href="#历史命令" class="headerlink" title="历史命令"></a>历史命令</h3><p>功能：在Linux系统中，每一个人操作的命令都会记录到命令历史中，在以后可以通过命令历史查看和使用以前操作的命令。 </p><p>语法1： history history n 当history命令没有参数，将显示整个历史命令列表的内容，如果使 用n参数，将显示最后n个历史命令。 </p><p>语法2：</p><p>#<code>history -a|n|r|w filename</code> </p><p>把当前的历史命令记录追加到历史命令文件中。</p><table><thead><tr><th>选项</th><th>含义</th></tr></thead><tbody><tr><td>-a</td><td>把当前的历史命令记录追加到历史命令文件中</td></tr><tr><td>-c</td><td>清空历史命令列表</td></tr><tr><td>-n</td><td>将历史文件中的内容加入到当前历史命令列表中</td></tr><tr><td>-r</td><td>将历史命令文件中的内容更新（替换）当前历史命令列表</td></tr><tr><td>-w</td><td>把当前历史命令列表的内容写入历史命令文件，并且覆盖 历史命令文件的原来内容</td></tr></tbody></table><h3 id="命令别名"><a href="#命令别名" class="headerlink" title="命令别名"></a>命令别名</h3><p>功能：命令别名是Bash Shell的强特性，在执行非常长的命令时，可以定制命令 </p><p>格式：#alias 别名=“命令” </p><p>案例 1. 用户可以把常用的ps –uax|more定制为psa。 </p><p>例: #<code>alias psa=”ps -aux|more”</code> </p><p>注意：</p><ol><li><p>在定义别名时，等号两边不能有空格，等号右边的命令一般都会包含空格或 特殊字符，此时需要用引号 </p></li><li><p>仅对本次登录系统有效，如果希望每次登录系统都能够使用该命令别名，可以编辑~/.bashrc文件（root用户是/root/.bashrc,普通用户是/home/*/.bashrc）</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux文件与目录管理：压缩、重定向与管道</title>
      <link href="/2022/04/23/Linux%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86%EF%BC%9A%E5%8E%8B%E7%BC%A9%E3%80%81%E9%87%8D%E5%AE%9A%E5%90%91%E4%B8%8E%E7%AE%A1%E9%81%93/"/>
      <url>/2022/04/23/Linux%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86%EF%BC%9A%E5%8E%8B%E7%BC%A9%E3%80%81%E9%87%8D%E5%AE%9A%E5%90%91%E4%B8%8E%E7%AE%A1%E9%81%93/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux文件与目录管理：压缩、重定向与管道"><a href="#Linux文件与目录管理：压缩、重定向与管道" class="headerlink" title="Linux文件与目录管理：压缩、重定向与管道"></a>Linux文件与目录管理：压缩、重定向与管道</h1><h2 id="归档文件和压缩文件"><a href="#归档文件和压缩文件" class="headerlink" title="归档文件和压缩文件"></a>归档文件和压缩文件</h2><ul><li><p>归档是把很多文件放到一个文件中，方便做备份、存储和传输 </p></li><li><p>采用tar – 标准的linux归档命令 </p></li><li><p>归档通常被压缩 </p></li><li><p>算法应用到压缩文件上 </p></li><li><p>解压恢复原始文件 </p></li><li><p>tar 传统支持使用gzip和gunzip,或者bzip2和bunzip2的压缩方式</p></li></ul><h4 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h4><ul><li>基本功能：打包和解包</li><li>格式： tar [选项] 文件或者目录 </li><li>常用选项 <ul><li>-c：创建新的打包文件。 </li><li>-t：列出打包文件的内容，查看已经打包了哪些文件。 </li><li>-x：从打包文件中释放文件。</li><li>-f：指定打包文件名。</li><li>-v：详细列出 tar 处理的文件信息。 </li><li>-z：用 gzip 来压缩/解压缩打包文件。 </li><li>-j：用 bzip2 来压缩/解压缩打包文件。 </li><li>-r：追加新的文档 </li><li>-U：追加</li></ul></li></ul><p> <strong>例：</strong></p><p>1、归档/root/abc目录，生成文件为/root/abc.tar </p><p>#<code>tar –cvf /root/abc.tar /root/abc</code> </p><p>#<code>ls –l /root/abc.tar</code> </p><p>2、查看/root/abc.tar归档文件的内容 </p><p>#<code>tar –tvf /root/abc.tar</code> </p><p>3、将归档文件/root/abc.tar解包出来 </p><p>#<code>tar –xvf /root/abc.tar</code></p><p>4、将文件/root/abc/d添加到/root/abc.tar归档文件中 </p><p>#<code>touch /root/abc/d</code> </p><p>#<code>tar -rvf /root/abc.tar /root/abc/d</code> </p><p>#<code>tar –tvf /root/abc.tar</code>  </p><p>5、更新归档文件/root/abc.tar中的文件/root/abc/d </p><p>#<code>tar –uvf /root/abc.tar /root/abc/d</code></p><p>#<code>tar –tvf /root/abc.tar</code></p><p><strong>注意： “-f 文件名|设备名”是一个整体， 所以 -cvf myball.tar  不能写成：-cfv myball.tar 或 -fcv myball.tar</strong></p><h4 id="gzip"><a href="#gzip" class="headerlink" title="gzip"></a>gzip</h4><ul><li><p>Linux下常用的压缩和解压缩命令。 </p></li><li><p>由官方仓库的gzip软件包提供。 </p></li><li><p>压缩后 gzip 会在每个文件的后面添加扩展名 .gz。 </p></li><li><p>压缩后原文件会被自动删除。</p></li><li><p>在 windows 下可以用 winzip 或 winrar或7-zip 解压。</p></li><li><p>用法：gzip [选项] 文件列表  </p></li></ul><p><strong>选项：</strong></p><ul><li><p>-d: 解开压缩文件。 </p></li><li><p>-f: 强行压缩文件，不理会文件名称或硬链接是否存在以及该文件是否为符号链接。 </p></li><li><p>-l: 列出压缩文件的相关信息（压缩文件的大小；未压缩文件的大小；压缩比；未 压缩文件的名字）。</p></li><li><p>-n: 压缩文件时，不保存原来的文件名称及时间戳（默认为保存，即-N）。 </p></li><li><p>-r : 递归处理，将指定目录下的所有文件及子目录一同处理。 </p></li><li><p>-t : 测试压缩文件是否正确无误。 </p></li><li><p>-v : 显示指令执行过程。</p></li><li><p>-&lt;压缩率&gt; : 压缩率是一个介于1～9的数值，默认值为“6”，数值越大压缩率越高。 </p></li></ul><p>-best 参数等价于-9；–fast参数等价于-1</p><p><strong>例：</strong></p><p>Tar 调用gzip实例 </p><p>1、将/root/abc目录压缩成/root/abc.tar.gz文件</p><p>#<code>tar -zcvf /root/abc.tar.gz /root/abc</code> </p><p>2、查看/root/abc.tar.gz文件 </p><p>#<code>tar -ztvf /root/abc.tar.gz</code></p><p>3、将压缩文件/root/abc.tar.gz解压出来 </p><p>#<code>tar -zxvf /root/abc.tar.gz</code>  </p><p>或者 压缩/root/abc.tar  </p><p>#<code>gzip /root/abc.tar</code>  </p><p>解压/root/abc.tar .gz </p><p>#<code>gzip –d /root/abc.tar .gz</code></p><h4 id="bzip2"><a href="#bzip2" class="headerlink" title="bzip2"></a>bzip2</h4><ul><li><p>Linux下常用的压缩和解压缩命令。 </p></li><li><p>由官方仓库的bzip2软件包提供。</p></li><li><p>比gzip的压缩比更高。</p></li><li><p>压缩后 bzip2 会在每个文件的后面添加扩展名 .bz2。 </p></li><li><p>压缩后原文件会被自动删除。 </p></li><li><p>在 windows 下可以用 winrar或7-zip 解压。</p></li><li><p>bzip2命令的格式和参数与gzip类似</p></li></ul><p><strong>例：</strong></p><p>压缩文件filename </p><p>$ <code>bzip2 filename</code> </p><p>高度压缩文件 file1和file2并显示执行过程 </p><p>$ <code>bzip2 -9v file1 file2</code> </p><p>解压filename.bz2文件 </p><p>$ <code>bzip2 -d filename.bz2</code> </p><p>$ <code>bunzip2 filename.bz2 </code></p><h4 id="zip-unzip"><a href="#zip-unzip" class="headerlink" title="zip/unzip"></a>zip/unzip</h4><p>与windows下的 winzip兼容</p><p>由官方仓库的zip/unzip软件包提供 </p><p>例如： – 压缩文件 file1为 fiel1.zip，原文件保留 </p><p>$ <code>zip file1.zip file1</code> </p><p>– 将子目录 data1/ 下的所有文件压缩到文件 data1.zip </p><p>$ <code>zip –r data1.zip data1</code> </p><p>– 解压释放压缩文件 data1.zip 中的所有文件 </p><p>$ <code>unzip data1.zip</code> </p><h5 id="显示压缩文件的内容"><a href="#显示压缩文件的内容" class="headerlink" title="显示压缩文件的内容"></a>显示压缩文件的内容</h5><p>不解压，显示压缩文件的内容：</p><p>1、zcat、zless </p><ul><li><p>对于用gzip压缩的文件，zcat，zless命令可以在不解压的情况下，直接显示文件的内容 </p></li><li><p>zcat：直接显示压缩文件的内容 </p></li><li><p>zless：直接逐行显示压缩文件的内容 </p></li></ul><p>2、bzcat、bzless </p><ul><li><p>对于bzip2压缩文件，bzcat，bzless命令可以在不解压的情况下，直接 显示文件的内容 </p></li><li><p>bzcat：直接显示压缩文件的内容</p></li><li><p>Bzless：直接逐行显示压缩文件的内容 </p></li></ul><h4 id="rar和7za"><a href="#rar和7za" class="headerlink" title="rar和7za"></a>rar和7za</h4><ul><li>rar </li></ul><p>– 由RPMForge仓库的rar软件包提供 </p><ul><li>7za </li></ul><p>– <a href="http://www.7-zip.org/">http://www.7-zip.org</a> </p><p>– <a href="http://p7zip.sourceforge.net/">http://p7zip.sourceforge.net/</a> </p><p>– 由EPEL仓库的p7zip软件包提</p><h2 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h2><p>所谓重定向，就是不使用系统的标准输入端口、标准输出端口或标准错误端口，而进行重新的指定，所以重定向分为输出重定向、输入重定向和错误重定向。通常情况下重定向到一个文件。</p><p>在Shell中，要实现重定向主要依靠重定向符实现，即Shell是检查命令行中有无重定向符来决定是否需要实施重定向</p><h3 id="输入输出重定向"><a href="#输入输出重定向" class="headerlink" title="输入输出重定向"></a>输入输出重定向</h3><table><thead><tr><th>名称</th><th>文件描述符</th><th>含义</th><th>设备</th><th>说明</th></tr></thead><tbody><tr><td>STDIN</td><td>0</td><td>标准输入</td><td>键盘</td><td>命令在执行时所要的输入通过它来取得</td></tr><tr><td>STDOUT</td><td>1</td><td>标准输出</td><td>显示器</td><td>命令执行后的输出结果从该端口送出</td></tr><tr><td>STDERR</td><td>2</td><td>标准错误</td><td>显示器</td><td>命令执行时的错误信息通过该端口送出</td></tr></tbody></table><h4 id="输入重定向中用到的符号及其作用"><a href="#输入重定向中用到的符号及其作用" class="headerlink" title="输入重定向中用到的符号及其作用"></a>输入重定向中用到的符号及其作用</h4><table><thead><tr><th><strong>符号</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>命令  &lt; 文件</td><td>将文件作为命令的标准输入</td></tr><tr><td>命令  &lt;&lt; 分界符</td><td>从标准输入中读入，直到遇见分界符才停止</td></tr><tr><td>命令  &lt; 文件1  &gt; 文件2</td><td>将文件1作为命令的标准输入并将标准输出到文件2</td></tr></tbody></table><h4 id="输出重定向中用到的符号及其作用"><a href="#输出重定向中用到的符号及其作用" class="headerlink" title="输出重定向中用到的符号及其作用"></a>输出重定向中用到的符号及其作用</h4><table><thead><tr><th><strong>符号</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>命令  &gt; 文件</td><td>将标准输出重定向到一个文件中（清空原有文件的数据）</td></tr><tr><td>命令 2&gt;  文件</td><td>将错误输出重定向到一个文件中（清空原有文件的数据）</td></tr><tr><td>命令  &gt;&gt; 文件</td><td>将标准输出重定向到一个文件中（追加到原有内容的后面）</td></tr><tr><td>命令 2&gt;&gt;  文件</td><td>将错误输出重定向到一个文件中（追加到原有内容的后面）</td></tr><tr><td>命令  &gt;&gt; 文件2&gt;&amp;1或  命令  &amp;&gt;&gt; 文件</td><td>将标准输出与错误输出共同写入到文件中（追加到原有内容的后面）</td></tr></tbody></table><p>例：</p><p>$ <code>ls -l /tmp &gt;mydir</code> </p><p>$ <code>ls -l /etc &gt;&gt;mydir </code></p><p>$ <code>myprogram 2&gt; err_file </code></p><p>$ <code>myprogram &amp;&gt; output_and_err_file</code> </p><p>$ <code>find ~ -name *.mp3 &gt; ~/cd.play.list</code> </p><p>$ <code>echo “Please call me : 68800000”&gt;message</code> </p><p>$ <code>cat &lt;&lt;!&gt;mytext</code> </p><p>This text forms the content of the heredocument , </p><p>which continues until the end of text delimite</p><p><code>Command &gt; file</code> </p><p>将command的标准输出定向到 file </p><p><code>Command &gt;&gt; file</code> </p><p>将command的标准输出附加到 file </p><p><code>Command &lt; file</code> </p><p>将file作为输入发送到command </p><p><code>Command 2&gt; file</code> </p><p>将command的错误输出定向到 file </p><p><code>Command 2&gt;&gt; file</code>  </p><p>将command的错误输出附加到 file </p><p><code>Command &amp;&gt; file</code> </p><p>将所有输出重定向到文件</p><h2 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h2><h3 id="管道的引入"><a href="#管道的引入" class="headerlink" title="管道的引入"></a><strong>管道的引入</strong></h3><p>UNIX 系统的一个基本哲学是：<em>一连串的小命令能够解决大问题</em>。其中每个小命令都能够很好地完成一项单一的工作。现在需要有一些东 西能够将这些简单的命令连接起来，这样管道就应运而生。 </p><p>许多Linux命令具有过滤特性，即一条命令通过标准输入端口接受一个 文件中的数据，命令执行后产生的结果数据又通过标准输出端口送给 后一条命令，作为该命令的输入数据。后一条命令也是通过标准输入 端口而接受输入数据。</p><ul><li><p>管道（使用符号“|”表示）用来连接命令 </p><ul><li><p>命令1 | 命令2  </p></li><li><p>将命令1的STDOUT发送给命令2的STDIN  </p></li><li><p>STDERR不能通过管道转发 </p></li></ul></li><li><p>用来组合多种工具的功能 </p><ul><li><p>命令1 | 命令2 | 命令3 |……  </p></li><li><p><code>ls -C | tr &#39;a-z&#39; &#39;A-Z‘ | wc</code> </p></li></ul></li><li><p>管道线中的每一条命令都作为一个单独的进程运行，每一条命令的输出作为下一条命令的输入。 </p></li><li><p>由于管道线中的命令总是从左到右顺序执行的，因此管道线是单向的。</p></li><li><p><strong>注：不要误以为管道命令符只能在一个命令组合中使用一次。可以这样使用：“命令A | 命令B | 命令C”。</strong></p><p><strong>曾经有位东北的同学做了一个特别贴切的类比：把管道符当做流水线作业，这跟吃顿烧烤是同一个道理，即第一个人负责切肉，第二个人负责串肉，第三个人负责烧烤，最后的处理结果交付给用户。</strong></p></li></ul><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>1、任何写入到标准输出的命令都可以在管道的左侧使用。 </p><p>2、任何从标准输入读取的命令都可以在管道的右侧使用。 </p><p>3、可以用管道将多个命令连到一起，</p><p>例： </p><p>1、使用简单的管道 </p><p>#<code>ls /etc |more</code> </p><p>2、使用复杂的通道 </p><p>#<code>rpm –qa |grep a |more</code>  </p><p>3、显示passwd文档中pl的用户信息，并统计有少字符/行 。 </p><p>#<code>cat /etc/passwd |grep ‘pl’ |wc –l</code></p><h2 id="附加：通配符"><a href="#附加：通配符" class="headerlink" title="附加：通配符"></a>附加：通配符</h2><table><thead><tr><th><strong>通配符</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>*</td><td>任意字符</td></tr><tr><td>?</td><td>单个任意字符</td></tr><tr><td>[a-z]</td><td>单个小写字母</td></tr><tr><td>[A-Z]</td><td>单个大写字母</td></tr><tr><td>[a-Z]</td><td>单个字母</td></tr><tr><td>[0-9]</td><td>单个数字</td></tr><tr><td>[[:alpha:]]</td><td>任意字母</td></tr><tr><td>[[:upper:]]</td><td>任意大写字母</td></tr><tr><td>[[:lower:]]</td><td>任意小写字母</td></tr><tr><td>[[:digit:]]</td><td>所有数字</td></tr><tr><td>[[:alnum:]]</td><td>任意字母加数字</td></tr><tr><td>[[:punct:]]</td><td>标点符号</td></tr></tbody></table><ol><li>通配符不一定非要放到最后面，也可以放到前面。</li><li>可用于搜索文件或代替被通配的字符。</li><li>可以与创建文件的命令相结合，创建出好多个文件。</li><li>还可以输出一些指定的信息。</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jdk的配置</title>
      <link href="/2022/03/23/jdk%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/03/23/jdk%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>现在开始配置环境变量，就以下四步搞定</p><p>1.右击我的电脑-属性-高级-环境变量，找到它后左击，在系统变量下点击新建</p><p>2.输入变量名输入JAVA_HOME,变量值即是你安装jdk的位置，我是C:\Program Files\Java\jdk1.6.0_10</p><p>3.JAVA_HOME创建好后，我们开始创建PATH,变量值即使你电脑上bin文件的位置，还是在你安装java的文件夹中(CLASSPATH也是)，我是C:\ProgramFiles\Java\jdk1.6.0_10\bin</p><p>最后创建CLASSPATH,输入变量值，这里是找到tools.jar文件的位置，我是.;C:\Program Files\Java\jdk1.6.0_11\lib\tools.jar;（注意在复制路径到里面后，别忘了在最前面加上”.;”为了方便记忆，说白了，就是在前面加一个点和一个分号）</p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux文件与目录管理：文件与查找</title>
      <link href="/2022/03/23/Linux%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86%EF%BC%9A%E6%96%87%E4%BB%B6%E4%B8%8E%E6%9F%A5%E6%89%BE/"/>
      <url>/2022/03/23/Linux%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86%EF%BC%9A%E6%96%87%E4%BB%B6%E4%B8%8E%E6%9F%A5%E6%89%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux文件与目录管理：文件与查找"><a href="#Linux文件与目录管理：文件与查找" class="headerlink" title="Linux文件与目录管理：文件与查找"></a>Linux文件与目录管理：文件与查找</h1><h2 id="处理特殊字符："><a href="#处理特殊字符：" class="headerlink" title="处理特殊字符："></a>处理特殊字符：</h2><p>假设系统中有一个文件叫“-abc” ，如果我们想对它进行操作，例如现在要删除它，方法分 别如下： 我们可以命令行中输入rm – -abc命令来删除文件。（若直接在命令行中输入rm -abc命令，则 无效，由于文件名的第一个字符为 - ，Linux把文件名当作选项了，所以我们要使用“–”符 号来解决这个问题），其它的特殊字符也一样</p><h2 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h2><p>若有一个文件的类型与权限数据为“-rwxr-xr–”</p><p>先将整个类型与权限数据分开查阅，并将十个字符整理成为如下所示;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[-][rwx][r-x][r--]</span><br><span class="line"> 1  234  567 890</span><br></pre></td></tr></table></figure><p>1为:代表这个文件名为目录(d)或文件，本例中为文件（-) ﹔</p><p>234为:拥有者的权限，本例中为可读、可写、可执行（rwx） ;</p><p>567为:同群组使用者权限，本例中为可读可执行（rx） ;<br>890为:其他使用者权限，本例中为可读(r），就是只读之意.</p><p>同时注意到，rwx所在的位置是不会改变的，有该权限就会显示字</p><h3 id="chown用法："><a href="#chown用法：" class="headerlink" title="chown用法："></a>chown用法：</h3><p>用来更改某个目录或文件的用户名和用户组。</p><p>chown 用户名:组名 文件路径（可以是绝对路径也可以是相对路径）</p><p>例1：<code>chown root:root /tmp/tmp1</code></p><p>就是把tmp下的tmp1的用户名和用户组改成root和root（只修改了tmp1的属组）。</p><p>例2：<code>chown -R root:root /tmp/tmp1</code></p><p>就是把tmp下的tmp1下的所有文件的属组都改成root和root。</p><h3 id="chmod用法："><a href="#chmod用法：" class="headerlink" title="chmod用法："></a>chmod用法：</h3><p>用来修改某个目录或文件的访问权限。</p><p>语法：<code>chmod [-cfvR] [--help] [--version] [who] [+ | - | =] [mode] 文件名</code></p><p>例子：<code>chmod -R 777 /home/linux</code></p><h2 id="find查找"><a href="#find查找" class="headerlink" title="find查找"></a>find查找</h2><p>#find 时间，类型，名字，大小，用户，组，权限  </p><p>#locate updatedb手动更新数据库</p><p>• 功能：在文件系统中查找匹配的文件 </p><p>• 格式 find [&lt;起始目录&gt; …] [&lt;选项表达式&gt;] [&lt;条件匹配表达式&gt;] [&lt;动作表达式&gt;] </p><p>• 说明 – &lt;起始目录&gt;：对每个指定的 &lt;起始目录&gt; 递归搜索目录树</p><p> • 省略&lt;起始目录&gt;时表示当前目录 </p><p>– &lt;选项表达式&gt;：控制 find 命令的行为 </p><p>– &lt;条件匹配表达式&gt;：根据匹配条件查找文件 </p><p>– &lt;动作表达式&gt;：指定对查找结果的操作，默认为显示在标准输出（-print） </p><p>– 不带任何参数的 find 命令将在屏幕上递归显示当前目录下的文件列表。</p><h3 id="文件的时间戳"><a href="#文件的时间戳" class="headerlink" title="文件的时间戳"></a>文件的时间戳</h3><p> • GNU/Linux 文件的3种类型的时间戳：</p><p> – mtime: 最后修改时间 (ls -lt)  </p><p>– ctime: 状态改变时间 (ls -lc)  </p><p>– atime: 最后访问时间 (ls -lu) </p><p> • 说明 </p><p>– ctime并非文件创建时间。 </p><p>– 覆盖一个文件会改变mtime、ctime和atime三类时间。 </p><p>– 改变文件的访问权限或拥有者会改变文件的ctime和atime。 </p><p>– 读文件会改变文件的atime。</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-L</td><td>如果遇到符号链接文件，就跟踪链接所指的文件</td></tr><tr><td>-regextype TYPE</td><td>指定 -regex 和 -iregex 使用的正则表达式类型，默 认为 emacs</td></tr><tr><td>-depth/-d</td><td>查找目录自身之前先处理目录中的文件（即深度 优先）</td></tr><tr><td>-mount/-xdev</td><td>查找文件时不跨越文件系统</td></tr><tr><td>-maxdepth LEVELS</td><td>设置最大的查找深度</td></tr><tr><td>–help</td><td>显示 find 命令帮助信息</td></tr><tr><td>–version</td><td>显示 find 的版本</td></tr></tbody></table><p>例：</p><p>• 递归显示当前目录的文件列表 </p><p><code>$ find</code> </p><p>• 递归显示 / 目录的文件列表 </p><p><code>$ find /</code> </p><p>• 递归显示 / 目录的文件列表（仅限于3层目录） </p><p><code>$ find / -maxdepth 3</code> </p><p>• 递归显示 / 目录的文件列表（仅限于 / 文件系统） </p><p><code>$ find / -xdev</code> </p><p>• 递归显示 /home、/www、/srv 目录的文件列表 </p><p><code>$ find /home /www /srv</code></p><h2 id="条件表达式–文件名"><a href="#条件表达式–文件名" class="headerlink" title="条件表达式–文件名"></a>条件表达式–文件名</h2><table><thead><tr><th>条件</th><th>说明</th></tr></thead><tbody><tr><td>-name PATTERN</td><td>匹配文件名</td></tr><tr><td>-iname PATTERN</td><td>匹配文件名（忽略大小写）</td></tr><tr><td>-lname PATTERN</td><td>匹配符号链接文件名</td></tr><tr><td>-ilname PATTERN</td><td>匹配符号链接文件名（忽略大小写）</td></tr><tr><td>-wholename PATTERN</td><td>匹配文件的完整路径（不把 ‘/’ 和 ‘.’ 作为特殊字符）</td></tr><tr><td>-iwholename PATTERN</td><td>匹配文件的完整路径（忽略大小写）</td></tr></tbody></table><p><strong>PATTERN 使用 Shell 的匹配模式 • 可以使用 Shell 的通配符（*、？[]） • 要用“”或‘’括起来</strong></p><h2 id="条件表达式–时间属性"><a href="#条件表达式–时间属性" class="headerlink" title="条件表达式–时间属性"></a>条件表达式–时间属性</h2><table><thead><tr><th>条件</th><th>说明</th></tr></thead><tbody><tr><td>-amin N</td><td>查找 N 分钟以前被访问过的所有文件</td></tr><tr><td>-atime N</td><td>查找 N 天以前被访问过的所有文件</td></tr><tr><td>-cmin N</td><td>查找 N 分钟以前文件状态被修改过的所有文件（比如权限修改）</td></tr><tr><td>-ctime N</td><td>查找 N 天以前文件状态被修改过的所有文件 （比如权限修改）</td></tr><tr><td>-mmin N</td><td>查找 N 分钟以前文件内容被修改过的所有文件</td></tr><tr><td>-mtime N</td><td>查找 N 天以前文件内容被修改过的所有文件</td></tr><tr><td>-used N</td><td>查找被改动过之后，在N天内被存取过的所有文件</td></tr></tbody></table><p><strong>注：以上选项中的 N 可以有三种输入方式：N,+N,-N  +20 表示大于 20 （21，22，23 等）  -20 表示小于 20 （19，18，17 等） 20 表示等于 20</strong></p><p>例：</p><p>• 在/home下查找最近2天之内改动过的文件 </p><p><code>$ find /home -mtime -2</code> </p><p>• 在/home下查找最近2天之内被访问过的文件 </p><p><code>$ find /home -atime -2</code> </p><p>• 在/home下查找60分钟之前改动过的文件 </p><p><code>$ find /home -mmin +60</code></p><table><thead><tr><th>条件</th><th>说明</th></tr></thead><tbody><tr><td>-newer FILE</td><td>查找所有比 FILE 的内容修改时间新的文件</td></tr><tr><td>-cnewer FILE</td><td>查找所有比 FILE 的状态修改时间新的文件（比如权限修改）</td></tr><tr><td>-anewer FILE</td><td>查找所有比 FILE 的访问时间新的文件</td></tr></tbody></table><p><strong>FILE 为要比对的样板文件或目录</strong></p><p>例：</p><p>• 在/home下查找更新时间比tmp.txt新的文件或目录 </p><p><code>$ find /home -newer tmp.txt</code> </p><p>• 在/home下查找存取时间比tmp.txt新的文件或目录 </p><p><code>$ find /home -anewer tmp.txt</code></p><h2 id="条件表达式–用户和组"><a href="#条件表达式–用户和组" class="headerlink" title="条件表达式–用户和组"></a>条件表达式–用户和组</h2><table><thead><tr><th>条件</th><th>说明</th></tr></thead><tbody><tr><td>-uid N</td><td>用户ID为N的所有文件</td></tr><tr><td>-gid N</td><td>组ID为N的所有文件</td></tr><tr><td>-user USERNAME</td><td>用户名为 USERNAME 的所有文件</td></tr><tr><td>-group GROUPNAME</td><td>组名为 GROUPNAME 的所有文件</td></tr><tr><td>-nouser</td><td>文件属于不在 /etc/passwd 文件中的用户</td></tr><tr><td>-nogroup</td><td>文件属于不在 /etc/group 文件中的组</td></tr></tbody></table><p><strong>N 可以使用 N,+N,-N</strong></p><p>例：</p><p>• 查找在系统中已作废用户（在/etc/passwd中无记录）的文件 </p><p><code>$ find / -nouser</code> </p><p>• 查找属于 osmond 用户的文件 </p><p><code>$ find / -user osmond</code> </p><p>• 查找属于 students 组的文件 </p><p><code>$ find / -group students</code> </p><p>• 查找UID为502的所有文件 </p><p><code>$ find / -uid 502</code> </p><p>• 查找UID大于600的所有文件</p><p> <code>$ find / -uid +600</code> </p><p>• 查找GID小于60的所有文件 </p><p><code>$ find / -gid -60</code></p><h2 id="条件表达式–文件权限"><a href="#条件表达式–文件权限" class="headerlink" title="条件表达式–文件权限"></a>条件表达式–文件权限</h2><table><thead><tr><th>条件</th><th>说明</th></tr></thead><tbody><tr><td>-perm MODE</td><td>精确匹配权限模式为 MODE 的文件</td></tr><tr><td>-perm MODE</td><td>匹配权限模式至少为 MODE 的文件 （用户、组和其他人这三种权限必须都匹配）</td></tr><tr><td>-perm /MODE 或 -perm +MODE</td><td>匹配权限模式至少为 MODE 的文件 （用户、组和其他人这三种权限中有一种匹配即 可）</td></tr></tbody></table><p><strong>MODE 与 chown 命令的书写方式一致，既可以使用字符模式也可以 使用八进制的数值模式，通常使用八进制的数值模式</strong></p><p>例：</p><p>• 在/home目录下查找权限为700的所有文件或目录</p><p> <code>$ find /home -perm 700</code> </p><p>• 在/home目录下查找权限至少为740的所有文件或目录 </p><p><code>$ find /home -perm -740</code></p><p>条件表达式–类型和大小</p><table><thead><tr><th>条件</th><th>说明</th></tr></thead><tbody><tr><td>-type TYPE</td><td>查找类型为 TYPE 的文件，可用的类型： b-块设备文件; c-字符设备文件; d-目录文件; p-命名管道; f-普通文件;  l-符号链接; s-socket 文件</td></tr><tr><td>-links N</td><td>查找有N个链接的文件</td></tr><tr><td>-inum N</td><td>查找文件inode为N的文件</td></tr><tr><td>-samefile NAME</td><td>查找与NAME文件具有相同inode的文件</td></tr><tr><td>-size N[bcwkMG]</td><td>查找文件大小为N的文件，单位可以为： b-512 字节的块（省略单位的默认值）; c-字节; w-双字节; k-Kilobytes;  M-Megabytes; G-Gigabytes</td></tr><tr><td>-empty</td><td>查找空文件（大小为0）</td></tr></tbody></table><p>例：</p><p>• 在/home目录下查找硬连接数大于2的文件 </p><p><code>$find /home -links +2</code> </p><p>• 在当前目录下查找长度大于10kB的文件 </p><p><code>$find . -size +10k</code> </p><p>• 在/tmp目录下查找长度等于1GB的文件 </p><p><code>$find /tmp -size 1G</code> </p><p>• 在当前目录下查找长度小于10MB的文件 </p><p><code>$find . -size -10M</code></p><h2 id="find-命令–动作表达式"><a href="#find-命令–动作表达式" class="headerlink" title="find 命令–动作表达式"></a>find 命令–动作表达式</h2><p>• -print  </p><p>​    – 在标准输出上列出查找结果（每行一个文件）</p><p> • -ls </p><p>​    – 使用 ‘ls -dils’ 在标准输出上列出查找结果 </p><p>• -prune </p><p>​    – 忽略对某个目录的查找 </p><p>• -exec COMMAND {} ;  </p><p>​    – 对符合查找条件的文件执行 Linux 命令</p><p> • -ok COMMAND {} ; </p><pre><code> – 对符合查找条件的文件执行 Linux 命令；与 -exec 不同 的是，它会询问用户是否需要执行</code></pre><p> <strong>• {} 两个大括号之间不能有空格，表示查找到的对象 • ; 表示命令结束，反斜杠与前面的大括号之间必须要留空格</strong></p><p>例：</p><p>• 查找并列出当前目录下不安全的文件（世界可读写执行） </p><p><code>$ find . -perm -007 -ls</code> </p><p>• 查找 logs 目录下的所有的 .log 文件并查看它的详细信息 </p><p><code>$ find logs -name &quot;*.log&quot; -type f -exec ls -l &#123;&#125; \;</code> </p><p>• 查找当天修改过的普通文件并显示出来 </p><p><code>$ find . -type f -mtime -1 -exec ls -l &#123;&#125; \;</code> </p><p>• 在/data/目录下查找以.sh结尾的权限模式为644的文件，并且把他们增 加为可以执行的。 </p><p><code>$find /data –type f –perm 644 –name *.sh –ok chmod 755 &#123;&#125; \;</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基本命令</title>
      <link href="/2022/03/17/Linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/03/17/Linux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux基本命令"><a href="#Linux基本命令" class="headerlink" title="Linux基本命令"></a>Linux基本命令</h1><h2 id="1-pwd：显示当前路径"><a href="#1-pwd：显示当前路径" class="headerlink" title="1.pwd：显示当前路径"></a>1.pwd：显示当前路径</h2><p>cd ：切换目录</p><p>用法：<code>cd</code><br><code>cd ../</code> 切换到上级目录<br><code>cd /</code>  切换到根目录<br><code>cd ~</code> （或只有cd ）切换到当前用户主目录(home底下以用户名命名的文件夹) /root目录</p><p><code>mkdir</code> 创建目录</p><p><em>mkdir 目录名 -p  递归创建目录</em></p><h2 id="2-rmdir-删除空目录"><a href="#2-rmdir-删除空目录" class="headerlink" title="2.rmdir 删除空目录"></a>2.rmdir 删除空目录</h2><p>用法：<code>rmdir</code> 目录名<br>也可用：<code>rm -rf</code> 目录名</p><h2 id="3-ls-查看目录或文件信息"><a href="#3-ls-查看目录或文件信息" class="headerlink" title="3.ls 查看目录或文件信息"></a>3.ls 查看目录或文件信息</h2><p>主要选项：<br>-l 列出目录或者文件的详细信息。比如权限、修改时间等等<br>-a 列出当前目录下所有文件，包括隐藏文件（已点开头的都是隐藏文件）</p><h2 id="4-vi-文本编辑器"><a href="#4-vi-文本编辑器" class="headerlink" title="4.vi 文本编辑器"></a>4.vi 文本编辑器</h2><p>vim是vi的升级版,最常见的区别是能用多种颜色显示显示系统文件的一些特殊信息。</p><ul><li><p>vi: Visual Interface 文本编辑器,可视化接口</p></li><li><p>vim：vi iMproved的缩写，即vi的增强版</p></li></ul><p>vim编辑器分为三种主要模式：</p><ul><li><p>命令模式（编辑模式）：默认模式，移动光标，剪切/粘贴文本（界面表现：左下角显示文件名或为空）</p></li><li><p>插入模式（输入模式）：修改文本（界面表现：左下角显示—INSERT–）插入模式下，按ESC按键返回命令模式</p></li><li><p>末行模式（扩展模式）：保存、退出等（界面表现：左下角显示—VISUAL–）末行模式下连续按两次ESC按键返回末行模式</p></li></ul><p>Esc建Esc建：总是返回到命令模式<br>退出编辑按ESC键<br>不保存退出： <code>:q!</code><br>保存退出：  <code>:wq</code><br>输入/，进入搜索<br>输入<code>:set nu</code>，显示每一行的行数<br>按键盘G，可以直接定位到最末尾</p><h2 id="5-cp-复制"><a href="#5-cp-复制" class="headerlink" title="5.cp 复制"></a>5.cp 复制</h2><p>用法：cp ［选项］文件名或目录 目标地址<br>-R 拷贝目录及目录下所有目录和文件<br><code>cp a.txt b.txt</code>  将a文件复制，且另命名为b文件（目录名）</p><h2 id="6-mv-移动"><a href="#6-mv-移动" class="headerlink" title="6.mv 移动"></a>6.mv 移动</h2><p>用法：mv 文件名或目录 目标目录<br><code>mv a.txt ../</code>  将a文件移动到上级目录（将一个文件移动到另一个目录没有重命名）<br><code>mv a.txt ../b.txt</code>  将a文件移动到上一级并改名为b文件（将一个文件移动到另一个目录并重命名）</p><h2 id="7-rm-删除文件或目录"><a href="#7-rm-删除文件或目录" class="headerlink" title="7.rm 删除文件或目录"></a>7.rm 删除文件或目录</h2><p>-f 强制删除<br>-r 删除目录<br>常用：<code>rm -rf 文件或目录</code></p><h2 id="8-find-查找文件"><a href="#8-find-查找文件" class="headerlink" title="8.find 查找文件"></a>8.find 查找文件</h2><p>用法：find [路径] [选项]<br>常用选项有：<br><code>find . -name *.log</code>  在当前目录查找以.log结尾的文件<br><code>find / -name log</code>  在根目录查找log命名的目录</p><h2 id="9-grep-过滤"><a href="#9-grep-过滤" class="headerlink" title="9.grep 过滤"></a>9.grep 过滤</h2><p>在指定文件中查找字符（串）并打印该行<br>用法：grep 字符串 文件名<br><code>grep band file</code> 在file文件中找寻band字符串</p><h2 id="10-cat-显示文本文件内容"><a href="#10-cat-显示文本文件内容" class="headerlink" title="10.cat 显示文本文件内容"></a>10.cat 显示文本文件内容</h2><p>用法：cat 文件名  cat 文件名字</p><h2 id="11-head-查看前几行"><a href="#11-head-查看前几行" class="headerlink" title="11.head 查看前几行"></a>11.head 查看前几行</h2><p>用法： <code>head -n 5 文件名</code></p><h2 id="12-tail-从指定点开始将文件写到标准输出"><a href="#12-tail-从指定点开始将文件写到标准输出" class="headerlink" title="12.tail 从指定点开始将文件写到标准输出"></a>12.tail 从指定点开始将文件写到标准输出</h2><p>tail -n 5 文件名 查看后几行<br><code>tail -f error.log</code> 不断刷新，看到最新内容</p><h2 id="13-ps-查看进程（动态）"><a href="#13-ps-查看进程（动态）" class="headerlink" title="13.ps 查看进程（动态）"></a>13.ps 查看进程（动态）</h2><p>-ef 显示所有运行进程，并显示启动进程的命令</p><h2 id="14-netstat-查看网络状况-（net-status的简写）"><a href="#14-netstat-查看网络状况-（net-status的简写）" class="headerlink" title="14.netstat 查看网络状况 （net status的简写）"></a>14.netstat 查看网络状况 （net status的简写）</h2><p>netstat -apn 查看所有端口<br>an，按一定顺序排列输出<br>p，表示显示哪个进程在调用</p><h2 id="15-管道符-（竖线，英文输入法状态下shift-键盘上的的-）"><a href="#15-管道符-（竖线，英文输入法状态下shift-键盘上的的-）" class="headerlink" title="15.| 管道符 （竖线，英文输入法状态下shift+键盘上的的|\）"></a>15.| 管道符 （竖线，英文输入法状态下shift+键盘上的的|\）</h2><p>在命令之间建立管道，将前面命令的输出作为后面命令的输入<br>通过命令查找tomcat进程：<code>ps -ef | grep tomcat</code><br>通过命令查找到占用此端口的进程编号：<code>netstat -apn|grep 8080</code></p><h2 id="16-echo-打印文件内容或编辑文件内容"><a href="#16-echo-打印文件内容或编辑文件内容" class="headerlink" title="16.echo 打印文件内容或编辑文件内容"></a>16.echo 打印文件内容或编辑文件内容</h2><p>常用选项有：<br>-n 不换行输出<br>-e 可以使用转义字符（\n回车，\t tab键）<br>示例：<br><code>echo “I am studying linux”&gt;&gt;xujun.txt</code> 追加文件尾部内容<br>echo $? 假如返回值为0的时候，表示上一次命令成功。假如是1到255的话，则是失败<br><code>echo -e “wo\tshi\tshei”&gt; xujun.txt</code></p><h2 id="17-touch-创建一个空白文件，假如当前目录有同样的文件，则会更新文件的时间戳"><a href="#17-touch-创建一个空白文件，假如当前目录有同样的文件，则会更新文件的时间戳" class="headerlink" title="17.touch 创建一个空白文件，假如当前目录有同样的文件，则会更新文件的时间戳"></a>17.touch 创建一个空白文件，假如当前目录有同样的文件，则会更新文件的时间戳</h2><p>-a 修改access（访问）时间<br>-m 修改modify（修改）时间这两个参数了解即可</p><h2 id="18-uname-查看系统"><a href="#18-uname-查看系统" class="headerlink" title="18.uname 查看系统"></a>18.uname 查看系统</h2><p>-m 查看系统是几位操作系统<br>-r 查看系统的内核版本<br>-a 查看详细的系统内核版本和系统的操作系统</p><h2 id="19-rz-上传"><a href="#19-rz-上传" class="headerlink" title="19.rz 上传"></a>19.rz 上传</h2><p>假如系统里面没有这个命令，则使用yum install lrzsz 安装<br>-y 覆盖<br>直接输入rz，就可以上传文件</p><h2 id="20-sz-下载"><a href="#20-sz-下载" class="headerlink" title="20.sz 下载"></a>20.sz 下载</h2><p>假如系统里面没有这个命令，则使用yum install lrzsz 安装<br>-y 覆盖<br><code>sz -y test.txt</code></p><h2 id="21-su-切换用户"><a href="#21-su-切换用户" class="headerlink" title="21.su 切换用户"></a>21.su 切换用户</h2><p>su root  从普通用户切换到root（或直接su）</p><p>root状态切换其他用户直接su 用户名</p><h2 id="22-history-查看命令历史记录"><a href="#22-history-查看命令历史记录" class="headerlink" title="22.history 查看命令历史记录"></a>22.history 查看命令历史记录</h2><h2 id="23-chmod-权限赋予命令"><a href="#23-chmod-权限赋予命令" class="headerlink" title="23.chmod 权限赋予命令"></a>23.chmod 权限赋予命令</h2><p>-R 递归改变目录下所有子目录和文件的权限<br>数字方式：r=4 w=2 x=1<br> <img src="https://s2.loli.net/2022/03/06/heod8C7WTwvzK1Y.png" alt="img"></p><p>chmod 777 lemon<br> <img src="https://s2.loli.net/2022/03/06/XfLWwVZ21QkBx6E.png" alt="img"></p><h2 id="24-tar-解压，压缩tar-gz"><a href="#24-tar-解压，压缩tar-gz" class="headerlink" title="24.tar 解压，压缩tar.gz"></a>24.tar 解压，压缩tar.gz</h2><p><code>tar -czvf test.tar.gz test</code></p><p>将test文件夹压缩成test.tar.gz</p><p><code>tar -xzvf test.tar.gz</code></p><p>将test.tar.gz解压得到test文件夹</p><p> 25.zip 解压，压缩zip </p><p><code>zip –r test.zip test</code></p><p>将test文件夹压缩成test.zip，必须带r 才会把文件压缩进去，不然会生成一个空的文件夹</p><p><code>unzip test.zip</code></p><p>将test.zip文件夹解压</p><h2 id="26-关闭防火墙"><a href="#26-关闭防火墙" class="headerlink" title="26.关闭防火墙"></a>26.关闭防火墙</h2><p>开启：<code>service iptables start</code><br>关闭：<code>service iptables stop</code></p><h2 id="27-从尾到头查看文件"><a href="#27-从尾到头查看文件" class="headerlink" title="27. 从尾到头查看文件"></a>27. 从尾到头查看文件</h2><p>tac </p><h2 id="28-shutdown-关机"><a href="#28-shutdown-关机" class="headerlink" title="28.shutdown 关机"></a>28.shutdown 关机</h2><p> 永久关闭防火墙 </p><p><code>shutdown</code>是关闭系统<br><code>poweroff</code>是关闭系统的同时还关掉电源</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基本语法</title>
      <link href="/2022/03/05/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
      <url>/2022/03/05/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown基本语法"><a href="#Markdown基本语法" class="headerlink" title="Markdown基本语法"></a>Markdown基本语法</h1><p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</p><p>Markdown 语言在 2004 由约翰·格鲁伯（英语：John Gruber）创建。</p><p>Markdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</p><p>Markdown 编写的文档后缀为 <strong>.md</strong>, <strong>.markdown</strong>。</p><h2 id="Markdown-应用"><a href="#Markdown-应用" class="headerlink" title="Markdown 应用"></a>Markdown 应用</h2><p>Markdown 能被使用来撰写电子书，如：Gitbook。</p><p>当前许多网站都广泛使用 Markdown 来撰写帮助文档或是用于论坛上发表消息。例如：GitHub、简书、reddit、Diaspora、Stack Exchange、OpenStreetMap 、SourceForge等。</p><p><strong>优点：</strong><br>1、因为是纯文本，所以只要支持Markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。<br>2、操作简单。比如:WYSIWYG编辑时标记个标题，先选中内容，再点击导航栏的标题按钮，选择几级标题。要三个步骤。而Markdown只需要在标题内容前加<code>#</code>即可</p><p><strong>缺点：</strong><br>1、需要记一些语法（很简单，五分钟学会）。<br>2、有些平台不支持Markdown编辑模式。</p><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">开启方式：设置-&gt;默认编辑器-&gt;Markdown编辑器</span><br></pre></td></tr></table></figure><h2 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h2><p>Typora、VScode、wolai等软件均支持markdown语法，本文在Typora上编写。</p><h1 id="Markdown标题"><a href="#Markdown标题" class="headerlink" title="Markdown标题"></a>Markdown标题</h1><p>在想要设置为标题的文字前面加#来表示<br>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p><p>注：标准语法一般在#后跟个空格再写文字。</p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是一级标题</span></span><br><span class="line"><span class="comment">## 这是二级标题</span></span><br><span class="line"><span class="comment">### 这是三级标题</span></span><br><span class="line"><span class="comment">#### 这是四级标题</span></span><br><span class="line"><span class="comment">##### 这是五级标题</span></span><br><span class="line"><span class="comment">###### 这是六级标题</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><hr><h1 id="Markdown字体"><a href="#Markdown字体" class="headerlink" title="Markdown字体"></a>Markdown字体</h1><ul><li><h5 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h5></li></ul><p>要加粗的文字左右分别用两个*号包起来</p><ul><li><h5 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h5></li></ul><p>要倾斜的文字左右分别用一个*号包起来</p><ul><li><h5 id="斜体加粗"><a href="#斜体加粗" class="headerlink" title="斜体加粗"></a>斜体加粗</h5></li></ul><p>要倾斜和加粗的文字左右分别用三个*号包起来</p><ul><li><h5 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h5></li></ul><p>要加删除线的文字左右分别用两个~~号包起来</p><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">**这是加粗的文字**</span><br><span class="line">*这是倾斜的文字*`</span><br><span class="line">***这是斜体加粗的文字***</span><br><span class="line">~~这是加删除线的文字~~</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em><br>*<strong>这是斜体加粗的文字*</strong><br><del>这是加删除线的文字</del></p><hr><h1 id="Markdown区块"><a href="#Markdown区块" class="headerlink" title="Markdown区块"></a>Markdown区块</h1><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;<br>n个…</p><p>示例：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;这是引用的内容</span><br><span class="line">&gt;&gt;这是引用的内容</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><h1 id="Markdown分割线"><a href="#Markdown分割线" class="headerlink" title="Markdown分割线"></a>Markdown分割线</h1><p>三个或者三个以上的 - 或者 * 都可以。</p><p>示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">----</span><br><span class="line">***</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><p>效果如下：<br>可以看到，显示效果是一样的。</p><hr><hr><hr><hr><h1 id="Markdown图片"><a href="#Markdown图片" class="headerlink" title="Markdown图片"></a>Markdown图片</h1><p>语法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">![图片alt](图片地址 <span class="string">&#x27;&#x27;</span>图片title<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">图片alt就是显示在图片下面的文字，相当于对图片内容的解释。</span><br><span class="line">图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![blockchain](https:<span class="comment">//ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/</span></span><br><span class="line">u=<span class="number">702257389</span>,<span class="number">1274025419</span>&amp;fm=<span class="number">27</span>&amp;gp=<span class="number">0.</span>jpg <span class="string">&quot;区块链&quot;</span>)</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><strong>上传本地图片直接点击导航栏的图片标志，选择图片即可</strong></p><p>markdown格式追求的是简单、多平台统一。那么图片的存储就是一个问题，需要用图床，提供统一的外链，这样就不用在不同的平台去处理图片的问题了。才能做到书写一次，各处使用。</p><h1 id="Markdown超链接"><a href="#Markdown超链接" class="headerlink" title="Markdown超链接"></a>Markdown超链接</h1><p>语法：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">超链接名</span>](超链接地址 <span class="string">&quot;超链接title&quot;</span>)</span><br><span class="line">title可加可不加</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">知乎</span>](http:<span class="comment">//zhihu.com)</span></span><br><span class="line">[<span class="meta">百度</span>](http:<span class="comment">//baidu.com)</span></span><br></pre></td></tr></table></figure><p>效果如下：</p><p><a href="http://zhihu.com/">知乎</a><br><a href="https://links.jianshu.com/go?to=http://baidu.com">百度</a></p><p>注：Markdown本身语法不支持链接在新页面中打开，如果想要在新页面中打开的话可以用html语言的a标签代替。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;超链接地址&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>超链接名<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">示例</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h1 id="Markdown列表"><a href="#Markdown列表" class="headerlink" title="Markdown列表"></a>Markdown列表</h1><h5 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h5><p>语法：<br>无序列表用 - + * 任何一种都可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- 列表内容</span><br><span class="line">+ 列表内容</span><br><span class="line">* 列表内容</span><br><span class="line"></span><br><span class="line">注意：- + * 跟内容之间都要有一个空格</span><br></pre></td></tr></table></figure><p>效果如下：</p><ul><li>列表内容</li><li>列表内容</li><li>列表内容</li></ul><h5 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h5><p>语法：<br>数字加点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 列表内容</span><br><span class="line">2. 列表内容</span><br><span class="line">3. 列表内容</span><br><span class="line"></span><br><span class="line">注意：序号跟内容之间要有空格</span><br></pre></td></tr></table></figure><p>效果如下：</p><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol><h5 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h5><p><strong>上一级和下一级之间敲三个空格即可</strong></p><ul><li>一级无序列表内容<ul><li>二级无序列表内容</li><li>二级无序列表内容</li><li>二级无序列表内容</li></ul></li><li>一级无序列表内容<ol><li>二级有序列表内容</li><li>二级有序列表内容</li><li>二级有序列表内容</li></ol></li></ul><ol><li>一级有序列表内容<ul><li>二级无序列表内容</li><li>二级无序列表内容</li><li>二级无序列表内容</li></ul></li><li>一级有序列表内容<ol><li>二级有序列表内容</li><li>二级有序列表内容</li><li>二级有序列表内容</li></ol></li></ol><hr><h1 id="Markdown表格"><a href="#Markdown表格" class="headerlink" title="Markdown表格"></a>Markdown表格</h1><p>语法：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">表头<span class="params">|表头|</span>表头</span><br><span class="line">---<span class="params">|:--:|</span>---:</span><br><span class="line">内容<span class="params">|内容|</span>内容</span><br><span class="line">内容<span class="params">|内容|</span>内容</span><br><span class="line"></span><br><span class="line">第二行分割表头和内容。</span><br><span class="line">- 有一个就行，为了对齐，多加了几个</span><br><span class="line">文字默认居左</span><br><span class="line">-两边加：表示文字居中</span><br><span class="line">-右边加：表示文字居右</span><br><span class="line">注：原生的语法两边都要用 <span class="params">| 包起来。此处省略</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">姓名<span class="params">|技能|</span>排行</span><br><span class="line">--<span class="params">|:--:|</span>--:</span><br><span class="line">刘备<span class="params">|哭|</span>大哥</span><br><span class="line">关羽<span class="params">|打|</span>二哥</span><br><span class="line">张飞<span class="params">|骂|</span>三弟</span><br></pre></td></tr></table></figure><p>效果如下：</p><table><thead><tr><th>姓名</th><th align="center">技能</th><th align="right">排行</th></tr></thead><tbody><tr><td>刘备</td><td align="center">哭</td><td align="right">大哥</td></tr><tr><td>关羽</td><td align="center">打</td><td align="right">二哥</td></tr><tr><td>张飞</td><td align="center">骂</td><td align="right">三弟</td></tr></tbody></table><p>这里有一个网站可以一键生成表格</p><p><a href="https://www.tablesgenerator.com/markdown_tables">https://www.tablesgenerator.com/markdown_tables</a></p><h1 id="Markdown代码"><a href="#Markdown代码" class="headerlink" title="Markdown代码"></a>Markdown代码</h1><p>语法：<br>单行代码：代码之间分别用一个反引号包起来</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">`代码内容`</span></span><br></pre></td></tr></table></figure><p>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(<span class="string">``</span><span class="string">`)</span></span><br><span class="line"><span class="string">  代码...</span></span><br><span class="line"><span class="string">  代码...</span></span><br><span class="line"><span class="string">  代码...</span></span><br><span class="line"><span class="string">(`</span><span class="string">``</span>)</span><br></pre></td></tr></table></figure><blockquote><p>注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。</p></blockquote><p>示例：</p><p>单行代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">`create database hero;`</span></span><br></pre></td></tr></table></figure><p>代码块</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(```)</span><br><span class="line">    function <span class="function"><span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">         echo <span class="string">&quot;这是一句非常牛逼的代码&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="title">fun</span><span class="params">()</span></span>;</span><br><span class="line">(```)</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>单行代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database hero;</span><br></pre></td></tr></table></figure><p>代码块</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function <span class="function"><span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">  echo <span class="string">&quot;这是一句非常牛逼的代码&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="title">fun</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h1 id="Markdown流程图"><a href="#Markdown流程图" class="headerlink" title="Markdown流程图"></a>Markdown流程图</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">```flow</span><br><span class="line">st=&gt;start: 开始</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: Yes <span class="keyword">or</span> No?</span><br><span class="line">e=&gt;end</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br><span class="line">&amp;```</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://upload-images.jianshu.io/upload_images/6860761-9d9524ba31047696.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/751/format/webp" alt="img"></p><h1 id="Markdown-其他技巧"><a href="#Markdown-其他技巧" class="headerlink" title="Markdown 其他技巧"></a>Markdown 其他技巧</h1><h3 id="支持HTML-元素"><a href="#支持HTML-元素" class="headerlink" title="支持HTML 元素"></a>支持HTML 元素</h3><p>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</p><p>目前支持的 HTML 元素有：<code>&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;</code>等 ，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑</span><br></pre></td></tr></table></figure><p><img src="https://www.runoob.com/wp-content/uploads/2019/03/81999271-F914-428D-B7BF-164BDC67CAAC.jpg"></p><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p><strong>Markdown Preview Enhanced</strong> 使用 <a href="https://github.com/Khan/KaTeX">KaTeX</a> 或者 <a href="https://github.com/mathjax/MathJax">MathJax</a> 来渲染数学表达式。</p><p>KaTeX 拥有比 MathJax 更快的性能，但是它却少了很多 MathJax 拥有的特性。你可以查看 KaTeX supported functions/symbols 来了解 KaTeX 支持那些符号和函数。</p><p>默认下的分隔符：</p><ul><li><code>$...$</code> 或者 <code>\(...\)</code> 中的数学表达式将会在行内显示。</li><li><code>$$...$$</code> 或者 <code>\[...\]</code> 或者 ````math` 中的数学表达式将会在块内显示。</li></ul><p><img src="https://www.runoob.com/wp-content/uploads/2019/03/0e408954-fda8-11e5-9eb4-562d7c0ca431.gif" alt="img"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;Bmatrix&#125;</span><br><span class="line">   a &amp; b \\</span><br><span class="line">   c &amp; d</span><br><span class="line">\end&#123;Bmatrix&#125;</span><br><span class="line">$$</span><br><span class="line">$$</span><br><span class="line">\begin&#123;CD&#125;</span><br><span class="line">   A @&gt;a&gt;&gt; B \\</span><br><span class="line">@VbVV @AAcA \\</span><br><span class="line">   C @= D</span><br><span class="line">\end&#123;CD&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p>输出结果为：</p><p><img src="https://s2.loli.net/2022/03/05/tCDp12MmoqIlWfs.jpg" alt="img"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7启动与切换图形界面</title>
      <link href="/2022/03/02/CentOS7%E5%90%AF%E5%8A%A8%E4%B8%8E%E5%88%87%E6%8D%A2%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2/"/>
      <url>/2022/03/02/CentOS7%E5%90%AF%E5%8A%A8%E4%B8%8E%E5%88%87%E6%8D%A2%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="Cent-OS-7-启动与切换图形界面"><a href="#Cent-OS-7-启动与切换图形界面" class="headerlink" title="Cent OS 7 启动与切换图形界面"></a>Cent OS 7 启动与切换图形界面</h1><h2 id="安装图形界面"><a href="#安装图形界面" class="headerlink" title="安装图形界面"></a>安装图形界面</h2><p>默认情况下是不会安装图形界面的，所以需要自己手动安装，步骤如下：</p><ol><li><p>开启系统，以root身份进入</p></li><li><p>安装X(X Window System)，命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall &quot;X Window System&quot;</span><br></pre></td></tr></table></figure></li><li><p>其中大约有200多个软件，安装完成会出现complete！字样。然后安装图形界面软件，命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall &quot;GNOME Desktop&quot;</span><br></pre></td></tr></table></figure></li><li><p>由于这个软件组比第一个要大很多（包含800个左右的软件），安装过程会比较慢。安装完成会出现complete！字样。</p></li><li><p>安装完成后我们可以通过命令 <code>startx</code> 进入图形界面</p><p><img src="https://s2.loli.net/2022/03/02/z5aIZxcpj9vlTnr.png" alt="image-20220302223346362"></p></li></ol><h2 id="开机启动图形化界面"><a href="#开机启动图形化界面" class="headerlink" title="开机启动图形化界面"></a>开机启动图形化界面</h2><ol><li>首先使用<code>ctrl</code>+<code>alt</code>+<code>f2</code>切换到命令行模式，如果本身就是命令行模式就直接看下面的步骤</li><li>然后输入如下命令，查看当前开机启动模式</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl get-default</span><br></pre></td></tr></table></figure><p><code>graphical.target</code>代表开机时启动图形化界面<br><code>multi-user.target</code>代表开机时启动dos界面</p><ol start="3"><li>最后输入如下命令设置开机启动图形界面</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl set-default graphical.target </span><br></pre></td></tr></table></figure><ol start="4"><li>同理，如果想开机启动dos界面，就输入如下命令</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl set-default multi-user.target </span><br></pre></td></tr></table></figure><h2 id="dos界面与图形化界面切换快捷键"><a href="#dos界面与图形化界面切换快捷键" class="headerlink" title="dos界面与图形化界面切换快捷键"></a>dos界面与图形化界面切换快捷键</h2><p>图形到dos：<code>ctrl</code>+<code>alt</code>+<code>f2</code><br>dos到图形：输入<code>startx</code><br>或者<br>在命令上输入 <code>init 3</code> 命令 切换到dos界面<br>输入 <code>init 5</code>命令 切换到图形界面</p><h2 id="无法下载X-Window-System-与GNOME-Desktop"><a href="#无法下载X-Window-System-与GNOME-Desktop" class="headerlink" title="无法下载X Window System 与GNOME Desktop"></a>无法下载X Window System 与GNOME Desktop</h2><ol><li><p>检查网络</p><p><code>ping  www.baidu.com</code> 若无法ping通，则修改网络配置</p></li><li><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#cd /etc</span><br><span class="line">#cd sysconfig</span><br><span class="line">#cd network-scripts</span><br><span class="line">#vi ifcfg-ens33</span><br></pre></td></tr></table></figure></li><li><p>修改ifcfg-ens33文件的最后一条，将ONEBOOT：no 的no修改为yes，esc ：wq 保存退出</p></li><li><p>重启网络服务并重启系统</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#service network restart</span><br><span class="line"></span><br><span class="line">#init 6</span><br></pre></td></tr></table></figure></li><li><p>安装图形化桌面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall “X Window System”</span><br><span class="line">yum groupinstall “GNOME Desktop”</span><br><span class="line">systemctl set-default graphical.target</span><br><span class="line">startx</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> centOS </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/01/06/Hello%20World/"/>
      <url>/2022/01/06/Hello%20World/</url>
      
        <content type="html"><![CDATA[<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post.  <br></p><p>这里是Args建立的第一个个人博客 <br></p><p>20计算机科学与技术三班张吉涛 <br></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &quot;My New Post&quot;</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
